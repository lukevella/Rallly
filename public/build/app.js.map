{"version":3,"sources":["main.js","templates.js","directives/backImg.directive.js","directives/datepicker.directive.js","directives/discussion.directive.js","directives/dropdown.directive.js","directives/form.directive.js","directives/poll.directive.js","filters/elapsed.filter.js","services/communicator.service.js","services/modal.service.js","services/notification.service.js","controllers/about.controller.js","controllers/account.controller.js","controllers/editevent.controller.js","controllers/event.controller.js","controllers/example.controller.js","controllers/home.controller.js","controllers/navigation.controller.js","controllers/newevent.controller.js","controllers/verification.controller.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","$urlMatcherFactoryProvider","html5Mode","strictMode","otherwise","$injector","$location","$state","get","go","rule","path","url","length","indexOf","replace","state","templateUrl","controller","factory","$resource","id","update","method","verify","destroy","set","title","document","run","$templateCache","put","directive","scope","element","attrs","backImg","css","background-image","restrict","require","model","control","link","el","ngModel","$watch","newValue","$setViewValue","$validate","$validators","required","modelValue","viewValue","today","Date","activeDate","clone","setMonth","toDate","startDate","moveToFirstDayOfMonth","startDateDOW","getDay","add","days","toString","Array","i","date","isOutsideMonth","getMonth","isToday","equals","selectDay","dayObj","index","isActive","splice","inserted","undefined","compare","parse","returnIndex","modelDate","getDate","getYear","nextMonth","months","prevMonth","removeDate","$timeout","Comment","ConfirmModal","Communicator","event","controllerAs","$scope","$rootScope","comment","author","$on","e","participant","name","this","deleteComment","message","confirmText","cancelText","isDestructive","confirm","remove","_id","cid","postComment","commentForm","$valid","$save","trigger","content","scrollToBottom","$setPristine","thread","scrollTop","prop","$document","addClass","open","clickHandler","isClickedElementChildOfPopup","find","target","toggle","bind","removeClass","unbind","service","emailRegexString","emailRegex","RegExp","prettyError","errors","field","pattern","maxlength","FormHelper","form","$watchCollection","email","location","Event","deleteEvent","isDeleted","setClass","DatePickerService","dateService","init","deregister","value","dates","unsetDate","$viewChangeListeners","push","$modelValue","$parsers","time","$isEmpty","$render","Participant","defaults","votes","didVote","pid","edit","participants","copy","cancel","save","formnew","discussionCtrl","datesCount","$promise","then","examplesNames","examples","example","j","answer","Math","random","isTopDate","count","selectedDate","filter","$filter","timeNow","getTime","difference","seconds","floor","minutes","hours","$emit","apply","arguments","data","mixpanel","track","comments","isExample","btfModal","modal","deactivate","activate","close","type","timeout","Title","showNotice","$http","Notification","params","master","undoChanges","didChange","JSON","stringify","didChangeDates","submit","eventUrl","href","absolute","openEvent","isClosed","closeEvent","editEvent","ceil","toISOString","creator","allowNotifications","description","emails","newEvent","console","log","toggleMenu","isOpen","hasClass","code"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('rallly', ['ui.router', 'ngResource', 'btford.modal', 'ngTagsInput', 'ngAnimate', 'ngSanitize'])\n    .config(function ($stateProvider, $urlRouterProvider, $locationProvider, $urlMatcherFactoryProvider) {\n        $locationProvider.html5Mode(true);\n        $urlMatcherFactoryProvider.strictMode(false)\n        $urlRouterProvider.otherwise(function ($injector, $location) {\n            var $state = $injector.get('$state');\n            $state.go('notfound');\n        });\n        $urlRouterProvider.rule(function ($injector, $location) {\n            var path = $location.url();\n\n            // check to see if the path already has a slash where it should be\n            if (path[path.length - 1] === '/' || path.indexOf('/?') > -1) {\n                return;\n            }\n\n            if (path.indexOf('?') > -1) {\n                return path.replace('?', '/?');\n            }\n\n            return path + '/';\n        });\n        $stateProvider\n            .state('newevent', {\n                url: '/new/',\n                templateUrl: 'templates/newevent.html',\n                controller: 'NewEventCtrl',\n            })\n            .state('deletedevent', {\n                templateUrl: 'templates/deletedevent.html',\n            })\n            .state('newevent.success', {\n                templateUrl: 'templates/newEvent/success.html'\n            })\n            .state('about', {\n                url: '/about/',\n                templateUrl: 'templates/about.html',\n                controller: 'AboutCtrl'\n            })\n            .state('example', {\n                url: '/example/',\n                controller: 'ExampleCtrl'\n            })\n            .state('notfound', {\n                templateUrl: 'templates/notfound.html'\n            })\n            .state('event', {\n                url: '/:id/',\n                templateUrl: 'templates/event.html',\n                controller: 'EventCtrl'\n            })\n            .state('editevent', {\n                url: '/:id/edit/',\n                templateUrl: 'templates/editevent.html',\n                controller: 'EditEventCtrl'\n            })\n            .state('verifyevent', {\n                url: '/verify/:id/code/:code/',\n                controller: 'VerificationCtrl'\n            })\n            .state('deleteevent', {\n                url: '/delete/:id/code/:code/',\n                controller: 'DeletionCtrl'\n            })\n    })\n    .factory('Event', function ($resource) {\n        return $resource('/api/event/:id', {\n            id: '@_id'\n        }, {\n            'update': {\n                method: 'PUT'\n            },\n            'verify': {\n                method: 'GET',\n                url: '/api/event/:id/code/:code'\n            },\n            'destroy': {\n                method: 'DELETE',\n                url: '/api/event/:id/code/:code'\n            }\n        });\n    })\n    .factory('Participant', function ($resource) {\n        return $resource('/api/event/:id/participant/:pid', {\n            id: '@_id'\n        }, {\n            'update': {\n                method: 'PUT'\n            }\n        });\n    })\n    .factory('Comment', function ($resource) {\n        return $resource('/api/event/:id/comment/:cid', {\n            id: '@_id'\n        }, {\n            'update': {\n                method: 'PUT'\n            }\n        })\n    })\n    .factory('Title', function () {\n        return {\n            set: function (title) {\n                document.title = title;\n            }\n        }\n    });\n","angular.module(\"rallly\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"templates/about.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-title\\\">Frequently Asked Questions</div>\\n    <div class=\\\"box-description\\\">\\n        Want to find out more about Rallly? Check out the FAQs below.\\n    </div>    <h2>What is Rallly?</h2>\\n    <p>\\n        Rallly is a collaborative scheduling service that makes deciding on a date fast and easy. In other words, Rallly helps you and your friends decide on a date to host an event.\\n    </p>\\n    <h2>Why is it called Rallly?</h2>\\n    <p>\\n        The name is derived from the proper spelling of the word, &ldquo;rally&rdquo;. The Webster dictionary defines rally as, &ldquo;to muster for a common purpose&rdquo; which accurately describes the goal of this service. The inproper spelling can be attributed to the difficulty of finding short and meaningful domain names.\\n    </p>\\n    <h2>Who made this?</h2>\\n    <p>\\n        Rallly was created by <a href=\\\"http://lukevella.com\\\">Luke Vella</a>.\\n    </p>\\n</div>\\n\");\r\n$templateCache.put(\"templates/confirmmodal.html\",\"<div class=\\\"rl-modal-overlay\\\">\\n\\n<div class=\\\"rl-modal-position\\\">\\n\\n    <div class=\\\"rl-modal\\\">\\n        <div class=\\\"rl-modal-title\\\">{{modal.title}}</div>\\n        <div class=\\\"rl-modal-message\\\">\\n            {{modal.message}}\\n        </div>\\n        <div class=\\\"rl-modal-actions\\\">\\n            <button type=\\\"button\\\" ng-click=\\\"modal.confirm()\\\" ng-show=\\\"modal.confirm\\\" class=\\\"btn\\\" ng-class=\\\"{danger : modal.isDestructive}\\\">{{modal.confirmText}}</button>\\n            <button type=\\\"button\\\" ng-click=\\\"modal.cancel()\\\"  class=\\\"btn\\\">{{modal.cancelText}}</button>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n</div>\\n\");\r\n$templateCache.put(\"templates/deletedevent.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-message\\\">\\n        <div class=\\\"main-image\\\">\\n            <img src=\\\"/images/bin.png\\\" width=\\\"100\\\" />\\n        </div>\\n        <div class=\\\"title\\\">Event Deleted</div>\\n        <div class=\\\"content\\\">\\n            This event has been deleted and is no longer accessible.\\n        </div>\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/editevent.html\",\"<div ng-show=\\\"event._id\\\">\\n    <div class=\\\"box\\\">\\n\\n        <div class=\\\"box-title\\\">Edit Event</div>\\n        <div class=\\\"box-description\\\">\\n            You can makes changes to your existing event by changing the fields in the form below.\\n        </div>\\n\\n        <form novalidate name=\\\"form\\\" ng-submit=\\\"submit()\\\">\\n\\n            <section class=\\\"box-section\\\" user-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <section class=\\\"box-section\\\" event-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n            <section class=\\\"box-section\\\" date-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <section class=\\\"box-section\\\" settings-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <div class=\\\"box-controls box-bottom-sticky\\\">\\n                <button type=\\\"submit\\\" ng-show=\\\"didChange()\\\" class=\\\"btn btn-primary\\\" ng-class=\\\"{disabled : !didChange()}\\\">\\n                    Save Changes\\n                </button>\\n                <button type=\\\"button\\\" ng-click=\\\"undoChanges()\\\" class=\\\"btn\\\" ng-show=\\\"didChange()\\\">Undo Changes</button>\\n                <a href=\\\"/{{event._id}}\\\" class=\\\"btn\\\" ng-hide=\\\"didChange()\\\">Done</a>\\n            </div>\\n\\n        </form>\\n\\n    </div>\\n\\n</div>\\n\");\r\n$templateCache.put(\"templates/event.html\",\"<div ng-show=\\\"event._id\\\">\\n    <div class=\\\"box \\\">\\n        <div class=\\\"event-header\\\">\\n            <div class=\\\"details\\\">\\n                <div class=\\\"title\\\">\\n                    {{event.title}}\\n                    <span class=\\\"title-label danger\\\" ng-show=\\\"event.isClosed\\\">Poll Closed</span>\\n                    <span class=\\\"title-label success\\\" ng-hide=\\\"event.isClosed\\\">Poll Open</span>\\n                </div>\\n                <div class=\\\"subtitle\\\">\\n                    Created by <a href=\\\"mailto:{{event.creator.email}}\\\">{{event.creator.name}}</a>\\n                    &bull; {{event.created | elapsed}}\\n                    &bull; <a href=\\\"#\\\" ng-click=\\\"editEvent()\\\">Edit Details</a>\\n                </div>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn\\\" ng-click=\\\"editEvent()\\\">Edit Event</button>\\n            </div>\\n        </div>\\n        <div class=\\\"event-description\\\" ng-if=\\\"event.description\\\" ng-bind-html=\\\"event.description | linky\\\"></div>\\n        <div class=\\\"event-location\\\" ng-if=\\\"event.location\\\">\\n            Location:\\n            <a  href=\\\"http://maps.google.com?q={{event.location}}\\\"  target=\\\"_blank\\\">{{event.location}}</a>\\n        </div>\\n\\n        <div class=\\\"poll-wrapper\\\">\\n            <div poll event=\\\"event\\\" class=\\\"poll\\\">\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"box\\\" ng-hide=\\\"event.comments.length == 0 && event.isClosed\\\">\\n        <div class=\\\"box-title\\\">\\n            Discussion\\n        </div>\\n        <div class=\\\"box-description\\\">\\n            You can discuss the event with your friends by leaving a comment below.\\n        </div>\\n        <div discussion event=\\\"event\\\">\\n\\n        </div>\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/home.html\",\"<div class=\\\"page-placeholder\\\">\\n    <div class=\\\"image\\\">\\n        <img src=\\\"/images/mark_large.png\\\" width=\\\"67\\\" />\\n    </div>\\n    <div class=\\\"title\\\">\\n        Schedule an Event\\n    </div>\\n    <div class=\\\"content\\\">\\n        Want to host an event but can’t decide on a date? Click on the button below to start!\\n    </div>\\n    <button ng-click=\\\"newEvent()\\\" class=\\\"btn\\\">Schedule New Event</button>\\n</div>\\n\");\r\n$templateCache.put(\"templates/newevent.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-title\\\">Schedule a New Event</div>\\n    <div class=\\\"box-description\\\">\\n        Fill in the form below to create your event and share it with your friends and colleagues.\\n    </div>\\n    <form novalidate autocomplete=\\\"off\\\" name=\\\"form\\\" ng-hide=\\\"eventUrl\\\" ng-submit=\\\"submit()\\\">\\n        <section class=\\\"box-section\\\" user-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" event-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" date-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" participants-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" settings-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <div class=\\\"box-controls box-bottom-sticky\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn\\\">Create Event</button>\\n        </div>\\n\\n    </form>\\n    <div class=\\\"box-message animated zoomIn\\\" ng-show=\\\"eventUrl\\\">\\n        <div class=\\\"main-image\\\">\\n            <img src=\\\"/images/success_large.png\\\" width=\\\"100\\\" />\\n        </div>\\n        <div class=\\\"title\\\">Event Created</div>\\n        <div class=\\\"content\\\">\\n            Your event has been created successfully! An email has been sent to each participant with a link to the event page. \\n        </div>\\n        <div class=\\\"mini-divider\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled=\\\"true\\\" value=\\\"{{eventUrl}}\\\" />\\n            <a href=\\\"{{eventUrl}}\\\" class=\\\"btn form-btn\\\">GO</a>\\n        </div>\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/notfound.html\",\"<div class=\\\"not-found\\\">\\n    <video id=\\\"gfyVid1\\\" class=\\\"gfyVid\\\" width=\\\"480\\\" height=\\\"360\\\" autoplay=\\\"\\\" loop=\\\"\\\" muted=\\\"muted\\\" style=\\\"display: block;\\\" poster=\\\"//thumbs.gfycat.com/PaltryComfortableBaldeagle-poster.jpg\\\">\\n            <source id=\\\"webmsource\\\" src=\\\"//zippy.gfycat.com/PaltryComfortableBaldeagle.webm\\\" type=\\\"video/webm\\\">\\n            <source id=\\\"mp4source\\\" src=\\\"//zippy.gfycat.com/PaltryComfortableBaldeagle.mp4\\\" type=\\\"video/mp4\\\">\\n            Sorry, you don\\'t have HTML5 video and we didn\\'t catch this properly in javascript.\\n            You can try to view the gif directly: <a href=\\\"http://zippy.gfycat.com/PaltryComfortableBaldeagle.gif\\\">http://zippy.gfycat.com/PaltryComfortableBaldeagle.gif</a>.\\n        </video>\\n    <div class=\\\"overlay\\\">\\n        <div class=\\\"wrapper\\\">\\n            <div class=\\\"title\\\">Error 404 </div>\\n            <div class=\\\"description\\\">The page you are looking for could not be found!</h2>\\n            <div class=\\\"actions\\\">\\n                <a href=\\\"/\\\" target=\\\"_self\\\">Go to Homepage</a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/notification.html\",\"<div class=\\\"notification {{notification.type}}\\\" ng-click=\\\"notification.close()\\\">\\n    <div class=\\\"title\\\">\\n        {{notification.title}}\\n    </div>\\n    <div class=\\\"message\\\">\\n        {{notification.message}}\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/directives/datePicker.html\",\"<div class=\\\"date-picker\\\">\\n    <div class=\\\"wrapper\\\">\\n        <div class=\\\"date-picker-head\\\">\\n            <a href=\\\"#\\\" class=\\\"arrow\\\" ng-click=\\\"prevMonth()\\\">&#10094;</a>\\n            <span class=\\\"title\\\">\\n                <span class=\\\"title-text\\\">{{title}}</span>\\n            </span>\\n            <a href=\\\"#\\\" class=\\\"arrow\\\" ng-click=\\\"nextMonth()\\\">&#10095;</a>\\n        </div>\\n        <div class=\\\"dow\\\">\\n            <div class=\\\"day\\\">\\n                Su\\n            </div>\\n            <div class=\\\"day\\\">\\n                Mo\\n            </div>\\n            <div class=\\\"day\\\">\\n                Tu\\n            </div>\\n            <div class=\\\"day\\\">\\n                We\\n            </div>\\n            <div class=\\\"day\\\">\\n                Th\\n            </div>\\n            <div class=\\\"day\\\">\\n                Fr\\n            </div>\\n            <div class=\\\"day\\\">\\n                Sa\\n            </div>\\n        </div>\\n        <div class=\\\"values\\\">\\n            <div ng-repeat=\\\"day in days\\\" class=\\\"value\\\"  ng-class=\\\"{ outside : day.isOutsideMonth, today : day.isToday, active : isActive(day.date) }\\\" ng-click=\\\"selectDay(day)\\\">\\n                {{day.date | date : \\'d\\' }}\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/directives/discussion.html\",\"<ul class=\\\"comment-thread\\\" ng-show=\\\"event.comments.length\\\">\\n    <li ng-repeat=\\\"comment in event.comments\\\" class=\\\"comment\\\">\\n        <div class=\\\"avatar-section\\\">\\n            <img src=\\\"/images/avatar.png\\\" />\\n        </div>\\n        <div class=\\\"comment-section\\\">\\n            <a href=\\\"#\\\" class=\\\"comment-delete\\\" ng-click=\\\"discussionCtrl.deleteComment(comment)\\\">&times;</a>\\n            <div class=\\\"meta\\\">\\n                <span class=\\\"name\\\">{{comment.author.name}}</span>\\n                <span class=\\\"time\\\">{{comment.created | elapsed}}</span>\\n            </div>\\n            <div class=\\\"content\\\" ng-bind-html=\\\"comment.content | linky\\\"></div>\\n        </div>\\n    </li>\\n</ul>\\n<form novalidate ng-submit=\\\"discussionCtrl.postComment()\\\" name=\\\"commentForm\\\" class=\\\"comment-form\\\">\\n    <div class=\\\"avatar-section\\\">\\n        <img src=\\\"/images/avatar.png\\\" />\\n    </div>\\n    <div class=\\\"input-section form-group\\\">\\n        <div class=\\\"content-section\\\">\\n            <textarea class=\\\"form-control\\\" required ng-model=\\\"comment.content\\\" placeholder=\\\"Write a comment...\\\"></textarea>\\n        </div>\\n        <div class=\\\"name-section\\\">\\n            <div class=\\\"name-container\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" required placeholder=\\\"Your Name\\\" ng-model=\\\"comment.author.name\\\" />\\n                <button type=\\\"submit\\\" class=\\\"btn\\\">Post Comment</button>\\n                <span class=\\\"form-error\\\" ng-show=\\\"commentForm.$submitted && commentForm.$error\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> Make sure you fill in all the fields.\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\");\r\n$templateCache.put(\"templates/directives/poll.html\",\"<div class=\\\"poll-header\\\">\\n    <div class=\\\"header participants-header\\\">\\n        {{event.participants.length}} participants\\n    </div>\\n    <div class=\\\"header date-header\\\" ng-repeat=\\\"d in event.dates\\\">\\n        <div class=\\\"daticon\\\">\\n            <div class=\\\"dow\\\">\\n                {{d | date: \\'EEE\\'}}\\n            </div>\\n            <div class=\\\"day\\\">\\n                {{d | date: \\'d\\'}}\\n            </div>\\n            <div class=\\\"month\\\">\\n                {{d | date : \\'MMM\\'}}\\n            </div>\\n            <span class=\\\"count\\\" ng-show=\\\"selectedDate($index)\\\" ng-class={top:isTopDate($index)}>{{selectedDate($index)}}</span>\\n        </div>\\n    </div>\\n    <div class=\\\"header actions-header\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"poll-body\\\">\\n    <div class=\\\"poll-entry\\\" ng-repeat=\\\"participant in event.participants\\\">\\n        <form novalidate ng-submit=\\\"editMode = false; pollCtrl.update(participant);\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{($index % 10) + 1 }}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <input required autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"participant.name\\\" ng-show=\\\"editMode\\\" value=\\\"participant.name\\\"/>\\n                <span ng-hide=\\\"editMode\\\" class=\\\"name editable\\\" ng-click=\\\"editMode = true && !event.isClosed; pollCtrl.edit(participant)\\\">{{participant.name}}</span>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <img src=\\\"/images/tick@2x.png\\\"  width=\\\"16\\\" ng-hide=\\\"editMode\\\" ng-if=\\\"participant.votes[$index]\\\" />\\n                <img src=\\\"/images/nope@2x.png\\\" width=\\\"8\\\" ng-hide=\\\"editMode\\\" ng-if=\\\"!participant.votes[$index]\\\" />\\n                <input ng-model=\\\"participant.votes[$index]\\\" ng-show=\\\"editMode\\\" ng-false-value=\\\"false\\\" type=\\\"checkbox\\\" />\\n                <div class=\\\"overlay\\\" ng-show=\\\"editMode\\\" ng-click=\\\"participant.votes[$index] = !participant.votes[$index]\\\"></div>\\n            </div>\\n            <div class=\\\"cell action-cell\\\" ng-hide=\\\"event.isClosed\\\">\\n                <button type=\\\"button\\\" ng-hide=\\\"editMode\\\" ng-click=\\\"editMode = true; pollCtrl.edit(participant)\\\" class=\\\"btn hover\\\">Edit</button>\\n                <button type=\\\"button\\\" ng-hide=\\\"editMode\\\" ng-click=\\\"pollCtrl.delete(participant)\\\" class=\\\"btn danger hover\\\">Delete</button>\\n                <button type=\\\"submit\\\" ng-show=\\\"editMode\\\" class=\\\"btn\\\">Save</button>\\n                <button type=\\\"button\\\" ng-show=\\\"editMode\\\" ng-click=\\\"editMode = false; pollCtrl.cancel($index)\\\" class=\\\"btn\\\">Cancel</button>\\n            </div>\\n        </form>\\n    </div>\\n    <div class=\\\"poll-example\\\" ng-class=\\\"{hidden : event.participants.length > 0}\\\">\\n        <div class=\\\"poll-entry\\\" ng-repeat=\\\"example in examples\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{$index + 1}}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <span class=\\\"name\\\">{{example.name}}</span>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <img src=\\\"/images/tick@2x.png\\\"  width=\\\"16\\\" ng-if=\\\"example.votes[$index]\\\" />\\n                <img src=\\\"/images/nope@2x.png\\\" width=\\\"8\\\" ng-if=\\\"!example.votes[$index]\\\" />\\n            </div>\\n            <div class=\\\"cell action-cell\\\">\\n\\n            </div>\\n        </div>\\n        <div class=\\\"overlay\\\">\\n            <div class=\\\"overlay-text\\\">\\n                Fill in the form below to get started\\n            </div>\\n        </div>\\n    </div>\\n    <div ng-hide=\\\"event.isClosed\\\" class=\\\"poll-entry highlight\\\">\\n        <form novalidate name=\\\"formnew\\\" ng-submit=\\\"pollCtrl.save()\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{participant.style}}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <input autocomplete=\\\"off\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Your name...\\\" ng-model=\\\"participant.name\\\" required value=\\\"participant.name\\\"/>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <input ng-model=\\\"participant.votes[$index]\\\" ng-false-value=\\\"false\\\" type=\\\"checkbox\\\" />\\n                <div class=\\\"overlay\\\" ng-click=\\\"participant.votes[$index] = !participant.votes[$index]\\\"></div>\\n            </div>\\n            <div class=\\\"cell action-cell\\\">\\n                <button type=\\\"submit\\\" ng-class=\\\"{ \\'animated shake\\' : formnew.$submitted && formnew.$invalid  }\\\" class=\\\"btn\\\">Save</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/directives/timePicker.html\",\"<div class=\\\"time-picker\\\">\\n    <div class=\\\"time-picker-col\\\">\\n        <div class=\\\"daticon\\\">\\n            <div class=\\\"dow\\\">\\n                {{date | date: \\'EEE\\'}}\\n            </div>\\n            <div class=\\\"day\\\">\\n                {{date | date: \\'d\\'}}\\n            </div>\\n            <div class=\\\"month\\\">\\n                {{date | date : \\'MMM\\'}}\\n            </div>\\n            <!-- <span class=\\\"delete\\\" ng-click=\\\"datepicker.unsetDate(date)\\\"></span> -->\\n        </div>\\n    </div>\\n    <div class=\\\"time-picker-col\\\" ng-repeat=\\\"time in date.times track by $index\\\">\\n        <input type=\\\"text\\\" class=\\\"time-picker-input\\\" time-picker ng-model=\\\"time\\\" ng-model-options=\\\"{ updateOn: \\'blur\\' }\\\" />\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/form/dateForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Choose Dates</div>\\n    <ul class=\\\"daticon-list\\\">\\n        <li ng-repeat=\\\"d in event.dates\\\">\\n            <div class=\\\"daticon\\\">\\n                <div class=\\\"dow\\\">\\n                    {{d | date: \\'EEE\\'}}\\n                </div>\\n                <div class=\\\"day\\\">\\n                    {{d | date: \\'d\\'}}\\n                </div>\\n                <div class=\\\"month\\\">\\n                    {{d | date : \\'MMM\\'}}\\n                </div>\\n                <span class=\\\"delete\\\" ng-click=\\\"datepicker.removeDate(d)\\\"></span>\\n            </div>\\n        </li>\\n    </ul>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Calendar</label>\\n            <span class=\\\"form-error\\\" ng-show=\\\"form.$submitted && form.datepicker.$error.required\\\">\\n                <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> You need to select a few dates\\n            </span>\\n            <div datepicker required name=\\\"datepicker\\\" control=\\\"datepicker\\\" ng-model=\\\"event.dates\\\">\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/form/eventForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Event Details</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"title\\\">Title</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.title.$touched || form.$submitted) && errors.title\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.title}}\\n                </span>\\n                <input id=\\\"title\\\" name=\\\"title\\\" ng-maxlength=\\\"30\\\" required ng-model=\\\"event.title\\\" type=\\\"text\\\" placeholder=\\\"Monthly Meetup...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group optional\\\">\\n                <label for=\\\"location\\\">Location</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.location.$touched || form.$submitted) && errors.location\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.location}}\\n                </span>\\n                <input id=\\\"location\\\" name=\\\"location\\\" ng-model=\\\"event.location\\\" ng-maxlength=\\\"50\\\" type=\\\"text\\\" placeholder=\\\"Rick\\'s Cafe...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group optional\\\">\\n            <label for=\\\"description\\\" >Description</label>\\n            <textarea id=\\\"description\\\" name=\\\"description\\\" ng-model=\\\"event.description\\\" placeholder=\\\"Enter Description...\\\" class=\\\"form-control extend\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/form/participantsForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Invite Participants</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group optional\\\">\\n            <label>Participant\\'s Emails</label>\\n            <tags-input max-length=\\\"50\\\" allowed-tags-pattern=\\\"{{emailRegex}}\\\" display-property=\\\"email\\\" ng-model=\\\"event.emails\\\" placeholder=\\\"Add an Email\\\" type=\\\"email\\\" autocomplete=\\\"off\\\"></tags-input>\\n            <input type=\\\"hidden\\\" name=\\\"shouldCreate\\\" value=\\\"true\\\" />\\n\\n        </div>\\n    </div>\\n</div>\\n\");\r\n$templateCache.put(\"templates/form/settingsForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Settings</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"switch-row\\\" ng-if=\\\"event._id\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Poll Status\\n            </div>\\n            <div class=\\\"description\\\">\\n                Let people vote on the poll.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <div class=\\\"switch-value\\\">\\n                {{event.isClosed ? \\'Closed\\' : \\'Open\\' }}\\n            </div>\\n            <div switch-toggle ng-model=\\\"event.isClosed\\\" invert>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"switch-row\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Notifications\\n            </div>\\n            <div class=\\\"description\\\">\\n                Send me an email when someone votes or comments on the event.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <div class=\\\"switch-value\\\">\\n                {{event.creator.allowNotifications ? \\'Enabled\\' : \\'Disabled\\' }}\\n            </div>\\n            <div switch-toggle ng-model=\\\"event.creator.allowNotifications\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"switch-row\\\" ng-if=\\\"event._id\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Delete Event\\n            </div>\\n            <div class=\\\"description\\\">\\n                Once you delete an event it will no longer be accessible.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <button type=\\\"button\\\" ng-click=\\\"deleteEvent()\\\" class=\\\"btn\\\" ng-class=\\\"{danger : !deleteRequestSent, disabled : deleteRequestSent}\\\">{{deleteRequestSent ? \\'Request Sent\\' : \\'Delete Event\\' }}</button>\\n        </div>\\n    </div>\\n</div>\\n</section>\\n\");\r\n$templateCache.put(\"templates/form/timeForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Choose Times</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <table class=\\\"time-form\\\">\\n        <thead>\\n            <tr>\\n                <th>\\n\\n                </th>\\n                <th>\\n                    Time 1\\n                </th>\\n                <th>\\n                    Time 2\\n                </th>\\n                <th>\\n                    Time 3\\n                </th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr ng-repeat=\\\"d in event.dates\\\">\\n                <td>\\n                    <div class=\\\"daticon\\\">\\n                        <div class=\\\"dow\\\">\\n                            {{d.date | date: \\'EEE\\'}}\\n                        </div>\\n                        <div class=\\\"day\\\">\\n                            {{d.date | date: \\'d\\'}}\\n                        </div>\\n                        <div class=\\\"month\\\">\\n                            {{d.date | date : \\'MMM\\'}}\\n                        </div>\\n                        <span class=\\\"delete\\\" ng-click=\\\"unsetDate(d.date)\\\"></span>\\n                    </div>\\n                </td>\\n                <td ng-repeat=\\\"time in [1,2,3] track by $index\\\">\\n                    <input type=\\\"text\\\" time-picker ng-model-options=\\\"{ updateOn: \\'blur\\' }\\\" ng-model=\\\"d.times[$index]\\\" class=\\\"time-picker-input\\\" />\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\");\r\n$templateCache.put(\"templates/form/userForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Your Details</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">Name</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.name.$touched || form.$submitted) && errors.name\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.name}}\\n                </span>\\n                <input id=\\\"name\\\" name=\\\"name\\\" ng-maxlength=\\\"30\\\" required ng-model=\\\"event.creator.name\\\" type=\\\"text\\\" placeholder=\\\"John Doe...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.email.$touched || form.$submitted) && errors.email\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.email}}\\n                </span>\\n                <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" ng-pattern=\\\"emailRegex\\\" required ng-model=\\\"event.creator.email\\\" placeholder=\\\"john.doe@email.com...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");}]);","angular.module('rallly')\r\n.directive('backImg', function(){\r\n    return function(scope, element, attrs){\r\n        var url = attrs.backImg;\r\n        element.css({\r\n            'background-image': 'url(/images/' + url +'.png)'\r\n        });\r\n    };\r\n})\r\n","angular.module('rallly')\r\n.directive('datepicker', function(){\r\n    return {\r\n        restrict : 'A',\r\n        require : 'ngModel',\r\n        scope : {\r\n            model : '=ngModel',\r\n            control : '='\r\n        },\r\n        templateUrl: 'templates/directives/datePicker.html',\r\n        link : function(scope, el, attrs, ngModel){\r\n            scope.model = scope.model || [];\r\n            scope.control = scope.control || {};\r\n\r\n            scope.$watch('model', function(newValue){\r\n                ngModel.$setViewValue(newValue);\r\n                ngModel.$validate();\r\n            }, true);\r\n\r\n            ngModel.$validators.required = function(modelValue, viewValue){\r\n                if (!modelValue || modelValue.length == 0){\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            var today = Date.today(), activeDate = today.clone();\r\n            var setMonth = function(toDate){\r\n                activeDate = toDate;\r\n                var startDate = activeDate.clone().moveToFirstDayOfMonth(), // get first day of active month\r\n                    startDateDOW = startDate.getDay(); // get day of the week for the active start date of the active month\r\n                // Set the startDate to the previous Sunday\r\n                if (startDateDOW == 0){\r\n                    startDate.add(-7).days();\r\n                } else {\r\n                    startDate.add(startDateDOW * -1).days();\r\n                }\r\n                scope.title = activeDate.toString('MMMM yyyy');\r\n                var days = new Array(42);\r\n                for (var i = 0; i < days.length; i++){\r\n                    var date = startDate.clone().add(i).days()\r\n                    days[i] = {\r\n                        date : date,\r\n                        isOutsideMonth : (date.getMonth() != activeDate.getMonth()) ? true : false,\r\n                        isToday : (Date.equals(date, today))\r\n                    }\r\n                }\r\n                scope.days = days;\r\n            }\r\n            setMonth(activeDate);\r\n            scope.selectDay = function(dayObj){\r\n                if (dayObj.isOutsideMonth) {\r\n                    setMonth(dayObj.date);\r\n                }\r\n                if ((index = scope.isActive(dayObj.date, true)) != -1) {\r\n                    // Already selected\r\n                    scope.model.splice(index, 1); // remove\r\n                } else {\r\n                    // Not selected\r\n                    var index = 0, inserted = false;\r\n                    do {\r\n                        if (scope.model[index] == undefined || Date.compare(Date.parse(scope.model[index]), dayObj.date) > 0){\r\n                            scope.model.splice(index, 0, dayObj.date);\r\n                            inserted = true;\r\n                        }\r\n                        index++;\r\n                    } while (inserted == false);\r\n                }\r\n            }\r\n            scope.isActive = function(date, returnIndex){\r\n                scope.model = scope.model || [];\r\n                for (var i = 0; i < scope.model.length; i++){\r\n                    var modelDate = Date.parse(scope.model[i]);\r\n                    if (modelDate.getDate() == date.getDate() &&\r\n                        modelDate.getMonth() == date.getMonth() &&\r\n                        modelDate.getYear() == date.getYear()){\r\n                        return (returnIndex) ? i : true;\r\n                    }\r\n                }\r\n                return (returnIndex) ? -1 : false;\r\n            }\r\n            scope.nextMonth = function(){\r\n                setMonth(activeDate.clone().add(1).months());\r\n            }\r\n            scope.prevMonth = function(){\r\n                setMonth(activeDate.clone().add(-1).months());\r\n            }\r\n\r\n            scope.control.removeDate = function(date){\r\n                if ((index = scope.isActive(Date.parse(date), true)) != -1) {\r\n                    scope.model.splice(index, 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","angular.module('rallly')\r\n.directive('discussion', function($timeout, Comment, ConfirmModal, Communicator){\r\n    return {\r\n        restrict : 'A',\r\n        templateUrl : 'templates/directives/discussion.html',\r\n        scope : {\r\n            'event' : '='\r\n        },\r\n        controllerAs : 'discussionCtrl',\r\n        controller : function($scope, $rootScope){\r\n            $scope.comment = { author : {}, comment : '' };\r\n            $rootScope.$on('add:participant', function(e, event, participant){\r\n                $scope.comment.author.name = participant.name;\r\n            });\r\n            this.deleteComment = function(comment){\r\n                var modal = new ConfirmModal({\r\n                    title : 'Are you sure?',\r\n                    message : 'Are you sure you want to remove this comment?',\r\n                    confirmText : 'Yes - delete',\r\n                    cancelText : 'No - nevermind',\r\n                    isDestructive : true,\r\n                    confirm : function(){\r\n                        Comment.remove({ id : $scope.event._id , cid : comment._id }, function(event){\r\n                            $scope.event = event;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            this.postComment = function(){\r\n                if ($scope.commentForm.$valid){\r\n                    var comment = new Comment($scope.comment);\r\n                    comment.$save({id:$scope.event._id}, function(event){\r\n                        $scope.event = event;\r\n                        Communicator.trigger('add:comment', event, $scope.comment);\r\n                        $scope.comment.content = '';\r\n                        $timeout($scope.scrollToBottom);\r\n                    });\r\n                    $scope.commentForm.$setPristine();\r\n                }\r\n            }\r\n            $scope.scrollToBottom = function(){\r\n                var thread = angular.element('.comment-thread');\r\n                thread.scrollTop(thread.prop('scrollHeight'));\r\n            }\r\n        },\r\n        link : function(scope, el, attrs){\r\n            $timeout(scope.scrollToBottom);\r\n        }\r\n    }\r\n});\r\n","angular.module('rallly')\r\n.directive('dropdown', function($document){\r\n    return {\r\n        restrict : 'A',\r\n        link : function(scope, el, attrs){\r\n            el.addClass('dropdown');\r\n            scope.open = false;\r\n\r\n            var clickHandler = function(event){\r\n                var isClickedElementChildOfPopup = el.find(event.target).length > 0;\r\n                if (isClickedElementChildOfPopup) return;\r\n                scope.toggle();\r\n            }\r\n\r\n            scope.toggle = function(){\r\n                scope.open = !scope.open;\r\n                if (scope.open){\r\n                    el.addClass('open');\r\n                    $document.bind('click', clickHandler);\r\n                } else {\r\n                    el.removeClass('open');\r\n                    $document.unbind('click', clickHandler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","angular.module('rallly')\r\n.service('FormHelper', function(){\r\n    this.emailRegexString = '^([\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4})?$';\r\n    this.emailRegex = new RegExp(this.emailRegexString);\r\n    this.prettyError = function(errors, field){\r\n        if (errors.required) return field + \" is required\";\r\n        if (errors.pattern) return field + \" is invalid\" ;\r\n        if (errors.maxlength) return field + \" is too long\";\r\n        return false;\r\n    }\r\n})\r\n.directive('userForm', function(FormHelper){\r\n    return {\r\n        scope : {\r\n            event : '=',\r\n            form : '='\r\n        },\r\n        templateUrl : 'templates/form/userForm.html',\r\n        link : function(scope, el, attrs) {\r\n            scope.errors = {};\r\n\r\n            scope.emailRegex = FormHelper.emailRegex;\r\n\r\n            scope.$watchCollection('form.name.$error',function(errors){\r\n                scope.errors.name = FormHelper.prettyError(errors, \"Name\");\r\n            });\r\n\r\n            scope.$watchCollection('form.email.$error',function(errors){\r\n                scope.errors.email = FormHelper.prettyError(errors, \"Email\");\r\n            });\r\n        }\r\n    }\r\n})\r\n.directive('eventForm', function(FormHelper){\r\n    return {\r\n        scope : {\r\n            event : '=',\r\n            form : '='\r\n        },\r\n        templateUrl : 'templates/form/eventForm.html',\r\n        link : function(scope, el, attrs) {\r\n            scope.errors = {};\r\n\r\n            scope.$watchCollection('form.title.$error',function(errors){\r\n                scope.errors.title = FormHelper.prettyError(errors, \"Title\");\r\n            });\r\n\r\n            scope.$watchCollection('form.location.$error',function(errors){\r\n                scope.errors.location = FormHelper.prettyError(errors, \"Location\");\r\n            });\r\n\r\n        }\r\n    }\r\n})\r\n.directive('dateForm', function(){\r\n    return {\r\n        scope : {\r\n            event : '=',\r\n            form : '='\r\n        },\r\n        templateUrl : 'templates/form/dateForm.html'\r\n    }\r\n})\r\n.directive('participantsForm', function(FormHelper){\r\n    return {\r\n        scope : {\r\n            event : '=',\r\n            form : '='\r\n        },\r\n        templateUrl : 'templates/form/participantsForm.html',\r\n        link : function(scope, el, attrs){\r\n            scope.emailRegex = FormHelper.emailRegexString;\r\n        }\r\n    }\r\n})\r\n.directive('settingsForm', function(Event, ConfirmModal){\r\n    return {\r\n        scope : {\r\n            event : '=',\r\n            form : '='\r\n        },\r\n        templateUrl : 'templates/form/settingsForm.html',\r\n        link : function(scope, el, attrs){\r\n            scope.deleteEvent = function(){\r\n                var modal = new ConfirmModal({\r\n                    title : 'Are you sure?',\r\n                    message : 'The event will no longer be accessible after it is deleted. Are you sure you want to continue?',\r\n                    isDestructive : true,\r\n                    confirmText : 'Yes - delete',\r\n                    cancelText : 'Cancel',\r\n                    confirm : function(){\r\n                        Event.delete({'id' : scope.event._id}, function(e){\r\n                            scope.event.isDeleted = true;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n})\r\n.directive('switchToggle', function(){\r\n    return {\r\n        scope : {\r\n            model : '=ngModel'\r\n        },\r\n        require : 'ngModel',\r\n        link : function(scope, el, attrs, ngModel) {\r\n            el.addClass('switch-toggle');\r\n            var setClass = function(){\r\n                if (scope.model ^ typeof(attrs.invert) !== 'undefined'){\r\n                    el.addClass('active');\r\n                } else {\r\n                    el.removeClass('active');\r\n                }\r\n            }\r\n            scope.$watch('model', setClass);\r\n            el.bind('click', function(e){\r\n                scope.model = !scope.model;\r\n                ngModel.$setViewValue(scope.model, e);\r\n            });\r\n        }\r\n    }\r\n})\r\n.directive('timeForm', function(DatePickerService){\r\n    return {\r\n        scope : {\r\n            event : '=',\r\n            form : '='\r\n        },\r\n        templateUrl : 'templates/form/timeForm.html',\r\n        link : function(scope, el, attrs){\r\n            var init = false;\r\n            var dateService;\r\n            var deregister = scope.$watch('event.dates', function(value){\r\n                if (value && !init) {\r\n                    deregister();\r\n                }\r\n                init = true;\r\n                dateService = new DatePickerService(scope.event.dates);\r\n                scope.unsetDate = function(date){\r\n                    dateService.removeDate(date);\r\n                }\r\n            });\r\n        }\r\n    }\r\n})\r\n.directive('timePicker', function($timeout){\r\n    return {\r\n        scope : {\r\n            model : '=ngModel'\r\n        },\r\n        require : 'ngModel',\r\n        link : function(scope, el, attrs, ngModel){\r\n            ngModel.$viewChangeListeners.push(function(){\r\n                scope.model = ngModel.$modelValue;\r\n            });\r\n\r\n            ngModel.$parsers.push(function (value) {\r\n                if (!value) return;\r\n                return Date.parse(value);\r\n            });\r\n\r\n            ngModel.$validators.time = function(modelValue, viewValue){\r\n                if (ngModel.$isEmpty(modelValue)) return true;\r\n                var time = Date.parse(modelValue);\r\n                if (time) {\r\n                    ngModel.$setViewValue(time.toString(\"hh:mm tt\"));\r\n                    ngModel.$render();\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n});\r\n","angular.module('rallly')\r\n.directive('poll', function($timeout, Participant, ConfirmModal, Communicator){\r\n    return {\r\n        restrict : 'A',\r\n        templateUrl : 'templates/directives/poll.html',\r\n        $scope : {\r\n            'event' : '='\r\n        },\r\n        controllerAs : 'pollCtrl',\r\n        controller : function($scope, $rootScope){\r\n\r\n            $scope.defaults = [];\r\n            $scope.participant = {votes: []};\r\n            $rootScope.$on('add:comment', function(e, event, comment){\r\n                // Don't repopulate field if user has already voted\r\n                if (!$scope.didVote) {\r\n                    $scope.participant.name = comment.author.name;\r\n                }\r\n            });\r\n            this.delete = function(participant){\r\n                var modal = new ConfirmModal({\r\n                    title : 'Delete ' + participant.name + '?',\r\n                    message : 'Are you sure you want to remove '+participant.name+' from the poll?',\r\n                    confirmText : 'Yes - delete',\r\n                    cancelText : 'No - nevermind',\r\n                    isDestructive : true,\r\n                    confirm : function(){\r\n                        Participant.remove({ id : $scope.event._id , pid : participant._id }, function(event){\r\n                            $scope.event = event;\r\n                            Communicator.trigger('delete:participant', event);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            this.update = function(participant){\r\n                Participant.update({\r\n                    id : $scope.event._id,\r\n                    pid : participant._id\r\n                }, participant);\r\n            }\r\n            this.edit = function(participant){\r\n                $scope.defaults[$scope.event.participants.indexOf(participant)] = angular.copy(participant);\r\n            }\r\n            this.cancel = function(index){\r\n                $scope.event.participants[index] = $scope.defaults[index];\r\n            }\r\n            this.save = function(){\r\n                if ($scope.formnew.$valid){\r\n                    var participant = new Participant($scope.participant);\r\n                    participant.$save({id:$scope.event._id}, function(event){\r\n                        $scope.event = event;\r\n                        $scope.didVote = true;\r\n                        Communicator.trigger('add:participant', event, $scope.participant);\r\n                        $scope.participant = {votes: []};\r\n                    });\r\n                    $scope.formnew.$setPristine();\r\n                }\r\n            }\r\n        },\r\n        link : function(scope, el, attrs, discussionCtrl){\r\n            var datesCount = [];\r\n\r\n            scope.event.$promise.then(function(event){\r\n                var examplesNames = ['John Example', 'Jane Specimen','Mark Instance', 'Mary Case'];\r\n                var examples = [];\r\n                for (var i = 0; i < examplesNames.length; i++){\r\n                    var example = { name : examplesNames[i] };\r\n                    example.votes = [];\r\n                    for (var j = 0; j <  event.dates.length; j++){\r\n                        var answer = Math.random()<.5;\r\n                        example.votes[j] = answer;\r\n                    }\r\n                    examples.push(example);\r\n                }\r\n                scope.examples = examples;\r\n            })\r\n\r\n            scope.isTopDate = function(index){\r\n                var count = datesCount[index];\r\n                for (var i = 0; i < datesCount.length; i++){\r\n                    if (datesCount[i] > count) return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            scope.selectedDate = function(index){\r\n                datesCount[index] = 0;\r\n                for (var i = 0; i < scope.event.participants.length; i++){\r\n                    if (scope.event.participants[i].votes[index]) datesCount[index]++;\r\n                }\r\n                return datesCount[index];\r\n            }\r\n        }\r\n    }\r\n});\r\n","angular.module('rallly')\r\n.filter('elapsed', function($filter){\r\n    return function(date){\r\n        if (!date) return;\r\n        var time = Date.parse(date),\r\n            timeNow = new Date().getTime(),\r\n            difference = timeNow - time,\r\n            seconds = Math.floor(difference / 1000),\r\n            minutes = Math.floor(seconds / 60),\r\n            hours = Math.floor(minutes / 60),\r\n            days = Math.floor(hours / 24);\r\n        if (days > 30) {\r\n            return 'on ' + $filter('date')(date, 'MMMM d');\r\n        } else if (days > 1) {\r\n            return days + \" days ago\";\r\n        } else if (days == 1) {\r\n            return \"1 day ago\"\r\n        } else if (hours > 1) {\r\n            return hours + \" hours ago\";\r\n        } else if (hours == 1) {\r\n            return \"an hour ago\";\r\n        } else if (minutes > 1) {\r\n            return minutes + \" minutes ago\";\r\n        } else if (minutes == 1){\r\n            return \"a minute ago\";\r\n        } else {\r\n            return \"a few seconds ago\";\r\n        }\r\n    }\r\n})\r\n","angular.module('rallly')\r\n.factory('Communicator', function($rootScope){\r\n    return new (function(){\r\n        this.trigger = function(){\r\n            $rootScope.$emit.apply($rootScope, arguments);\r\n        }\r\n        $rootScope.$on('view:event',function(e, data){\r\n            mixpanel.track('View Event', {\r\n                id : data._id,\r\n                participants : data.participants.length,\r\n                comments  : data.comments.length,\r\n                isExample : data.isExample,\r\n                dates : data.dates.length\r\n            });\r\n        })\r\n\r\n        $rootScope.$on('add:participant', function(e, event, participant){\r\n            mixpanel.track('Add Participant', {\r\n                id : event._id\r\n            })\r\n        })\r\n\r\n        $rootScope.$on('add:comment', function(e, event, comment){\r\n            mixpanel.track('Add Comment', {\r\n                id : event._id\r\n            })\r\n        })\r\n\r\n        $rootScope.$on('add:event', function(e, data){\r\n            mixpanel.track('Add Event', {\r\n                id : data._id,\r\n                participants : data.participants.length,\r\n                comments  : data.comments.length,\r\n                isExample : data.isExample,\r\n                dates : data.dates.length\r\n            })\r\n        })\r\n\r\n    })();\r\n});\r\n","angular.module('rallly')\r\n.factory('ConfirmModal', function(btfModal){\r\n\r\n    return function(config){\r\n        var modal;\r\n        modal = btfModal({\r\n            templateUrl : 'templates/confirmmodal.html',\r\n            controllerAs : 'modal',\r\n            controller : function(){\r\n                this.title = config.title\r\n                this.message = config.message;\r\n                this.confirm = (config.confirm) ? function(){config.confirm(); modal.deactivate()} : false;\r\n                this.cancel = modal.deactivate;\r\n                this.confirmText = config.confirmText || 'Confirm';\r\n                this.cancelText = config.cancelText || 'Cancel';\r\n                this.isDestructive = config.isDestructive;\r\n            }\r\n        });\r\n        modal.activate();\r\n        \r\n        this.destroy = function(){\r\n            modal.deactivate();\r\n        }\r\n    }\r\n});\r\n","angular.module('rallly')\r\n.factory('Notification', function($timeout, btfModal){\r\n    return function(config){\r\n        var modal;\r\n        modal = btfModal({\r\n            templateUrl : 'templates/notification.html',\r\n            controllerAs : 'notification',\r\n            controller : function(){\r\n                this.title = config.title\r\n                this.message = config.message;\r\n                this.close = modal.deactivate;\r\n                this.type = config.type;\r\n                var timeout = config.timeout || 5000;\r\n                $timeout(modal.deactivate, timeout);\r\n            }\r\n        });\r\n        modal.activate();\r\n\r\n        this.destroy = function(){\r\n            modal.deactivate();\r\n        }\r\n    }\r\n});\r\n","angular.module('rallly')\r\n.controller('AboutCtrl', function(Title){\r\n    Title.set('About Rallly')\r\n});\r\n","angular.module('rallly')\r\n.controller('AccountCtrl', function($scope, ConfirmModal){\r\n    $scope.showNotice = function(){\r\n        \r\n    }\r\n})\r\n","angular.module('rallly')\r\n.controller('EditEventCtrl', function($scope, $http, $state, $timeout, Event, ConfirmModal, Notification, Title){\r\n    var id = $state.params.id\r\n    $scope.event = Event.get({id:id}, function(data){\r\n        Title.set(\"Edit: \" + $scope.event.title);\r\n        $scope.master = angular.copy($scope.event);\r\n    }, function(e){\r\n        $state.go('notfound');\r\n    });\r\n    $scope.$watch('event.isDeleted', function(value){\r\n        if (value){\r\n            $state.go('deletedevent');\r\n        }\r\n    });\r\n    $scope.undoChanges = function(){\r\n        $scope.event = angular.copy($scope.master);\r\n    }\r\n    $scope.didChange = function(){\r\n        return JSON.stringify($scope.master) != JSON.stringify($scope.event);\r\n    }\r\n    $scope.didChangeDates = function(){\r\n        return JSON.stringify($scope.master.dates) != JSON.stringify($scope.event.dates);\r\n    }\r\n    $scope.submit = function(){\r\n        if ($scope.form.$valid){\r\n            if ($scope.didChangeDates() ){\r\n                var modal = new ConfirmModal({\r\n                    title : 'Hold up!',\r\n                    message : 'Changing the dates will reset all entries by the participants. Are you sure you want to do that?',\r\n                    confirmText : 'Yes, I\\'m sure',\r\n                    isDestructive : true,\r\n                    confirm : function(){\r\n                        $scope.event.participants = [];\r\n                        update();\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                update();\r\n            }\r\n        } else {\r\n            var notification = new Notification({\r\n                title : 'Not so fast',\r\n                message : 'Make sure you fill in all the required fields and try again.',\r\n                type : 'error'\r\n            });\r\n        }\r\n    }\r\n    var update = function(){\r\n        Event.update({\r\n            id : id\r\n        }, $scope.event,\r\n        function(){\r\n            var notification = new Notification({\r\n                title : 'Changes Saved',\r\n                message : 'Your changes have been saved successfully.',\r\n                type : 'success'\r\n            });\r\n            $scope.master = angular.copy($scope.event);\r\n        });\r\n    }\r\n});\r\n","angular.module('rallly')\r\n.controller('EventCtrl', function($scope, $http, $state, Title, Event, ConfirmModal, Communicator){\r\n\r\n    var id = $state.params.id;\r\n    // Get Event\r\n    $scope.event = Event.get({id:id}, function(data){\r\n        // Set the page title to the event title\r\n        if (data.isDeleted) {\r\n            $state.go('deletedevent');\r\n            return;\r\n        }\r\n        \r\n        Communicator.trigger('view:event', data);\r\n\r\n        Title.set($scope.event.title);\r\n        // Generate event url - i.e. http://rallly.co/jF9F_Fd\r\n        $scope.eventUrl = $state.href('event', {\r\n            id: $scope.event._id\r\n        }, {\r\n            absolute : true\r\n        });\r\n    }, function(e){\r\n        $state.go('notfound');\r\n    });\r\n\r\n    $scope.openEvent = function(){\r\n        $scope.event.isClosed = false;\r\n        Event.update({\r\n            id : id\r\n        }, $scope.event,\r\n        function(){\r\n            var modal = new ConfirmModal({\r\n                title : 'Event Open',\r\n                message : 'People can vote and comment on this event.',\r\n                cancelText : 'OK',\r\n            });\r\n        });\r\n    }\r\n\r\n    $scope.closeEvent = function(){\r\n        $scope.event.isClosed = true;\r\n        Event.update({\r\n            id : id\r\n        }, $scope.event,\r\n        function(){\r\n            var modal = new ConfirmModal({\r\n                title : 'Event Closed',\r\n                message : 'People can no longer vote or comment on this event.',\r\n                cancelText : 'OK',\r\n            });\r\n        });\r\n    }\r\n\r\n    $scope.editEvent = function(){\r\n        $state.go('editevent', { id : $scope.event._id });\r\n    }\r\n\r\n});\r\n","angular.module('rallly')\r\n.controller('ExampleCtrl', function($state, Event){\r\n    // Generate dates\r\n\r\n    var dates = [], date = new Date();\r\n    for (var i = 0; i < 4; i++){\r\n        dates.push(date.add(Math.ceil(Math.random() * 5)).days().toISOString());\r\n    }\r\n    // Generate Participants\r\n    var examplesNames = ['John Example', 'Jane Specimen','Mark Instance', 'Mary Case'];\r\n    var examples = [];\r\n    for (var i = 0; i < examplesNames.length; i++){\r\n        var example = { name : examplesNames[i] };\r\n        example.votes = [];\r\n        for (var j = 0; j <  dates.length; j++){\r\n            var answer = Math.random()<.5;\r\n            example.votes[j] = answer;\r\n        }\r\n        examples.push(example);\r\n    }\r\n    var event =  new Event({\r\n        \"creator\": {\r\n         \"name\": \"John Example\",\r\n         \"email\": \"rallly@lukevella.com\",\r\n         \"allowNotifications\" : false\r\n        },\r\n        \"title\": \"Lunch Meeting\",\r\n        \"location\": \"Starbucks, 901 New York Avenue\",\r\n        \"description\": \"This event has been automatically generated just for you! Feel free to try out all the different features and when you're ready, you can schedule a new event.\",\r\n        \"dates\" : dates,\r\n        \"participants\" : examples,\r\n        \"emails\": [],\r\n        \"comments\" : [{\r\n            author : {\r\n                name : \"John Example\"\r\n            },\r\n            content : \"Hey guys, this is a comment!\"\r\n        }, {\r\n            author : {\r\n                name : \"Mark Instance\"\r\n            },\r\n            content : \"Hi John... nice comment. Keep up the great work!\"\r\n        }, {\r\n            author : {\r\n                name : \"John Example\"\r\n            },\r\n            content : \"Thank you!\"\r\n        }],\r\n        \"isExample\" : true\r\n    });\r\n    event.$save(function(data){\r\n        $state.go('event', { id : data._id }, {\r\n            location : \"replace\"\r\n        });\r\n    })\r\n});\r\n","angular.module('rallly')\r\n.controller('HomeCtrl', function($scope, $state, Title){\r\n    Title.set('Rallly - Collaborative Scheduling')\r\n\r\n    $scope.newEvent = function(){\r\n        $state.go('newevent');\r\n    }\r\n});\r\n","angular.module('rallly')\r\n.controller('NavigationCtrl', function($scope, $rootScope, $location, $document){\r\n    $scope.isActive = function(path) {\r\n        if ($location.path() == path) {\r\n            return true;\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    var clickHandler = function(event){\r\n        var isClickedElementChildOfPopup = angular.element('.mobile-navigation').find(event.target).length > 0;\r\n        console.log(isClickedElementChildOfPopup);\r\n        if (isClickedElementChildOfPopup) return;\r\n        $scope.toggleMenu()\r\n    }\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(){\r\n        angular.element('body').removeClass('open-menu');\r\n        $document.unbind('click', clickHandler);\r\n    });\r\n\r\n    $scope.toggleMenu = function(){\r\n        console.log('click');\r\n        var isOpen = angular.element('body').hasClass('open-menu');\r\n        if (isOpen) {\r\n            angular.element('body').removeClass('open-menu');\r\n            $document.unbind('click', clickHandler);\r\n        } else {\r\n            angular.element('body').addClass('open-menu');\r\n            $document.bind('click', clickHandler);\r\n        }\r\n    }\r\n\r\n\r\n})\r\n","angular.module('rallly')\r\n.controller('NewEventCtrl', function($scope, $http, $state, Event, ConfirmModal, Notification, Communicator){\r\n\r\n    $scope.title = \"Schedule a New Event\";\r\n    $scope.description = \"Fill in the form below to create your event and share it with your friends and colleagues.\";\r\n    $scope.event = { creator : {\r\n        allowNotifications : true\r\n    }};\r\n\r\n\r\n    $scope.submit = function(){\r\n        if ($scope.form.$valid){\r\n            var newEvent = new Event($scope.event);\r\n            newEvent.$save()\r\n            .then(function(event){\r\n                $scope.event = event;\r\n                $scope.eventUrl = $state.href('event', {\r\n                    id: $scope.event._id\r\n                }, {\r\n                    absolute : true\r\n                });\r\n                Communicator.trigger('add:event', event);\r\n                $state.go('newevent.success');\r\n            }, function(){\r\n                var modal = new ConfirmModal({\r\n                    title : 'Uh oh!',\r\n                    message : 'There was an error creating your event. Please try again later.',\r\n                    cancelText : 'OK'\r\n                });\r\n            });\r\n        } else {\r\n            var notification = new Notification({\r\n                title : 'Hold on!',\r\n                message : 'Make sure you fill in all the required fields and that your data is correct.'\r\n            });\r\n        }\r\n    }\r\n\r\n});\r\n","angular.module('rallly')\r\n.controller('VerificationCtrl', function(Event, Notification, $state){\r\n    Event.verify({id : $state.params.id, code :$state.params.code}, function(){\r\n        var notification = new Notification({\r\n            title : 'Email Verified',\r\n            message : 'Your email has been verified. You will now be able to receive email notifications for this event',\r\n            type : 'success',\r\n            timeout : 5000\r\n        });\r\n    }, function(e){\r\n        var notification = new Notification({\r\n            title : 'Verification Failed',\r\n            message : 'Your verification code has expired.',\r\n            type : 'error'\r\n        });\r\n    });\r\n    $state.go('event', { id : $state.params.id }, {\r\n        location : \"replace\"\r\n    });\r\n\r\n});\r\n"]}