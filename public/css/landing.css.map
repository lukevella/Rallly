{"version":3,"file":"landing.css","sources":["landing.scss","bourbon/_bourbon.scss","bourbon/settings/_prefixer.scss","bourbon/settings/_px-to-em.scss","bourbon/settings/_asset-pipeline.scss","bourbon/helpers/_convert-units.scss","bourbon/helpers/_gradient-positions-parser.scss","bourbon/helpers/_is-num.scss","bourbon/helpers/_linear-angle-parser.scss","bourbon/helpers/_linear-gradient-parser.scss","bourbon/helpers/_linear-positions-parser.scss","bourbon/helpers/_linear-side-corner-parser.scss","bourbon/helpers/_radial-arg-parser.scss","bourbon/helpers/_radial-positions-parser.scss","bourbon/helpers/_radial-gradient-parser.scss","bourbon/helpers/_render-gradients.scss","bourbon/helpers/_shape-size-stripper.scss","bourbon/helpers/_str-to-num.scss","bourbon/functions/_assign.scss","bourbon/functions/_color-lightness.scss","bourbon/functions/_flex-grid.scss","bourbon/functions/_golden-ratio.scss","bourbon/functions/_grid-width.scss","bourbon/functions/_modular-scale.scss","bourbon/functions/_px-to-em.scss","bourbon/functions/_px-to-rem.scss","bourbon/functions/_strip-units.scss","bourbon/functions/_tint-shade.scss","bourbon/functions/_transition-property-name.scss","bourbon/functions/_unpack.scss","bourbon/css3/_animation.scss","bourbon/css3/_appearance.scss","bourbon/css3/_backface-visibility.scss","bourbon/css3/_background.scss","bourbon/css3/_background-image.scss","bourbon/css3/_border-image.scss","bourbon/css3/_border-radius.scss","bourbon/css3/_box-sizing.scss","bourbon/css3/_calc.scss","bourbon/css3/_columns.scss","bourbon/css3/_filter.scss","bourbon/css3/_flex-box.scss","bourbon/css3/_font-face.scss","bourbon/css3/_font-feature-settings.scss","bourbon/css3/_hyphens.scss","bourbon/css3/_hidpi-media-query.scss","bourbon/css3/_image-rendering.scss","bourbon/css3/_keyframes.scss","bourbon/css3/_linear-gradient.scss","bourbon/css3/_perspective.scss","bourbon/css3/_radial-gradient.scss","bourbon/css3/_transform.scss","bourbon/css3/_transition.scss","bourbon/css3/_user-select.scss","bourbon/css3/_placeholder.scss","bourbon/addons/_button.scss","bourbon/addons/_clearfix.scss","bourbon/addons/_directional-values.scss","bourbon/addons/_ellipsis.scss","bourbon/addons/_font-family.scss","bourbon/addons/_hide-text.scss","bourbon/addons/_html5-input-types.scss","bourbon/addons/_position.scss","bourbon/addons/_prefixer.scss","bourbon/addons/_retina-image.scss","bourbon/addons/_size.scss","bourbon/addons/_timing-functions.scss","bourbon/addons/_triangle.scss","bourbon/addons/_word-wrap.scss","bourbon/_bourbon-deprecated-upcoming.scss","neat/_neat.scss","neat/_neat-helpers.scss","neat/functions/_private.scss","neat/functions/_new-breakpoint.scss","neat/settings/_grid.scss","neat/settings/_visual-grid.scss","neat/settings/_disable-warnings.scss","neat/grid/_private.scss","neat/grid/_box-sizing.scss","neat/grid/_omega.scss","neat/grid/_outer-container.scss","neat/grid/_span-columns.scss","neat/grid/_row.scss","neat/grid/_shift.scss","neat/grid/_pad.scss","neat/grid/_fill-parent.scss","neat/grid/_media.scss","neat/grid/_to-deprecate.scss","neat/grid/_visual-grid.scss","neat/grid/_display-context.scss","neat/grid/_direction-context.scss","modules/_vars.scss","modules/_mixins.scss","partials/_normalize.scss"],"sourcesContent":["@import url(http://fonts.googleapis.com/css?family=Roboto+Slab:700|Roboto+Condensed:400,700);\r\n\r\n@import \"bourbon/bourbon\";\r\n$gutter: golden-ratio(4em, 1) !default;\r\n@import \"neat/neat\";\r\n@import \"modules/vars\";\r\n@import \"modules/mixins\";\r\n@import \"partials/normalize\";\r\n\r\n$slab-font : \"Roboto Slab\", \"Roboto\", Helvetica, Arial, sans-serif;\r\n$dark-clr : #4C4D4F;\r\n\r\nbody {\r\n    font-family: \"Roboto\", \"Helvetica Neue\", Arial, sans-serif;\r\n}\r\n\r\n.intro {\r\n    background: #3B455B url('../images/landing/intro_bg.jpg') no-repeat;\r\n    background-size: cover;\r\n    color: white;\r\n}\r\n.intro-overlay {\r\n    position:relative;\r\n    padding-top:30px;\r\n    overflow:hidden;\r\n    &:after {\r\n      content: \"\";\r\n      position: absolute;\r\n      z-index: 1000;\r\n      left: 0;\r\n      bottom: 0;\r\n      width: 100%;\r\n      height: 0;\r\n      border-bottom: 150px solid white;\r\n      border-left: 2000px solid transparent;\r\n      border-right: 0px solid transparent;\r\n    }\r\n}\r\n\r\n\r\n.container {\r\n    @include outer-container;\r\n    @include pad(0 30px);\r\n}\r\n\r\n.header {\r\n    padding: 20px 0;\r\n    margin-bottom:80px;\r\n    .logo {\r\n        float:left;\r\n        img {\r\n            width:100px;\r\n        }\r\n    }\r\n    .main-nav {\r\n        .links {\r\n            float:right;\r\n            margin:0;\r\n            li {\r\n                display:inline-block;\r\n                a {\r\n                    @include transition(color 0.2s ease-in-out);\r\n                    color:white;\r\n                    text-decoration: none;\r\n                    font-size: em(12px);\r\n                    padding:0 12px;\r\n                    color: #ABB2C3;\r\n                    &:hover {\r\n                        color: white;\r\n                    }\r\n                    &.active {\r\n                        color:white;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.intro-headline {\r\n    margin-bottom: 40px;\r\n    h1, h2 {\r\n        text-align:center;\r\n        margin:0 auto;\r\n    }\r\n    h1 {\r\n        font-family: $slab-font;\r\n        font-size: em(38);\r\n    }\r\n    h2 {\r\n        font-weight:normal;\r\n        color: #ABB2C3;\r\n        font-size: em(28);\r\n        max-width:520px;\r\n    }\r\n}\r\n\r\n.intro-actions {\r\n    text-align:center;\r\n    .free-label {\r\n        width:76px;\r\n        position:absolute;\r\n        height:53px;\r\n        left:-90px;\r\n        top:-30px;\r\n        background: url('../images/landing/free.png') no-repeat;\r\n        background-size: cover;\r\n    }\r\n}\r\n\r\n.button {\r\n    position:relative;\r\n    display:inline-block;\r\n    color:white;\r\n    font-size:em(12);\r\n    font-weight: bold;\r\n    text-decoration:none;\r\n    margin:0 5px;\r\n    padding: 10px 15px;\r\n    background: #5C6881;\r\n    border-radius: 2px;\r\n    @include transition(background 0.2s ease-in-out);\r\n    &:hover {\r\n        background: darken(#5C6881, 5%);\r\n    }\r\n    &.primary {\r\n        background: $green-clr;\r\n        &:hover {\r\n            background: darken($green-clr, 5%);\r\n        }\r\n    }\r\n}\r\n\r\n.intro-shots {\r\n    position:relative;\r\n    height: 455px;\r\n    margin-top:80px;\r\n    text-align: center;\r\n    min-width:800px;\r\n    .desktop {\r\n        position:relative;\r\n        display:inline-block;\r\n        background: url('../images/landing/desktop.png') no-repeat;\r\n        background-size: cover;\r\n        width: 812px;\r\n        height: 548px;\r\n    }\r\n    .mobile {\r\n        position:absolute;\r\n        right:20px;\r\n        top:50px;\r\n        background: url('../images/landing/mobile.png') no-repeat;\r\n        background-size:cover;\r\n        width: 250px;\r\n        height: 514px;\r\n    }\r\n}\r\n\r\n.landing-section {\r\n    position:relative;\r\n    padding-top:20px;\r\n    overflow:hidden;\r\n    text-align:center;\r\n    &.bottom {\r\n        padding-bottom:200px;\r\n        &:after {\r\n          content: \"\";\r\n          position: absolute;\r\n          z-index: 1000;\r\n          left: 0;\r\n          bottom: 0;\r\n          width: 100%;\r\n          height: 0;\r\n          border-bottom: 150px solid $background-clr;;\r\n          border-left: 2000px solid transparent;\r\n          border-right: 0px solid transparent;\r\n        }\r\n    }\r\n    &.dark {\r\n        padding-top:40px;\r\n        color:white;\r\n        background: #343B4A;\r\n        margin:80px 0;\r\n        h3 {\r\n            color: lighten(#343B4A, 20%);\r\n        }\r\n        h4 {\r\n            color:white;\r\n        }\r\n    }\r\n    h3, h4 {\r\n        text-align:center;\r\n        margin:0 auto;\r\n    }\r\n    h3 {\r\n        color: $green-clr;\r\n        font-size: em(14);\r\n        text-transform: uppercase;\r\n        margin-bottom:20px;\r\n    }\r\n    h4 {\r\n        font-family: $slab-font;\r\n        font-size:em(36);\r\n        line-height:1.2em;\r\n        margin-bottom:40px;\r\n        max-width: 580px;\r\n        color: $dark-clr;;\r\n    }\r\n    .seperator {\r\n        width:100%;\r\n        margin-bottom: 40px;\r\n        text-align:center;\r\n        &:after {\r\n            content: '';\r\n            display:inline-block;\r\n            height:1px;\r\n            background: $border-clr;\r\n            width: 500px;\r\n        }\r\n    }\r\n}\r\n\r\n.features {\r\n    @include row;\r\n    margin-bottom: 80px;\r\n    margin-top: 80px;\r\n    position:relative;\r\n    text-align:left;\r\n    .feature {\r\n        @include span-columns(4);\r\n        .image {\r\n            height:48px;\r\n            vertical-align:bottom;\r\n            position:relative;\r\n            margin-bottom:15px;\r\n            img {\r\n                position:absolute;\r\n                bottom:0;\r\n            }\r\n        }\r\n        h5 {\r\n            color: $dark-clr;\r\n            font-size: em(18);\r\n            margin:0 0 5px 0;\r\n        }\r\n        p {\r\n            margin:0;\r\n            font-size:em(14);\r\n            color: #7D8594;\r\n        }\r\n    }\r\n}\r\n\r\n.questions-section {\r\n    text-align:left;\r\n    @include row;\r\n    margin-bottom:40px;\r\n    margin-top:80px;\r\n    .questions-col {\r\n        @include span-columns(6);\r\n        .question {\r\n            margin-bottom:20px;\r\n            a {\r\n                color: $blue-clr;\r\n                text-decoration:none;\r\n                &:hover {\r\n                    color: darken($blue-clr, 15%);\r\n                    text-decoration:underline;\r\n                }\r\n            }\r\n            h6 {\r\n                font-size: em(18);\r\n                font-weight:normal;\r\n                color: $text-2-clr;\r\n                margin:0 0 5px 0;\r\n            }\r\n            p {\r\n                font-size: em(16);\r\n                line-height:1.5em;\r\n                margin:0;\r\n                color: $text-clr;\r\n            }\r\n        }\r\n    }\r\n}\r\n.stats {\r\n    .actions {\r\n        margin-bottom:40px;\r\n    }\r\n}\r\n\r\n.share {\r\n    .networks {\r\n        margin-bottom: 40px;\r\n        a {\r\n            display:inline-block;\r\n            width: 60px;\r\n            height:60px;\r\n            margin: 0 10px;\r\n            &.twitter {\r\n                background-image: url('../images/social/twitter.png');\r\n            }\r\n            &.github {\r\n                background-image: url('../images/social/github.png');\r\n            }\r\n            &.facebook {\r\n                background-image: url('../images/social/facebook.png');\r\n            }\r\n            background-size: 60px 120px;\r\n            &:hover {\r\n                background-position: 0 -60px;\r\n            }\r\n        }\r\n    }\r\n}\r\n.footer-section {\r\n    padding:40px 0 40px 0;\r\n    background: $background-clr;\r\n    .footer {\r\n        @include row;\r\n        .about {\r\n            @include span-columns(5);\r\n            p {\r\n                font-size: em(12);\r\n                color: $text-3-clr;\r\n                line-height:1.5em;\r\n                a {\r\n                    color: $text-3-clr;\r\n                    &:hover {\r\n                        color: $text-clr;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        .menu, .social {\r\n            @include span-columns(2);\r\n            .links {\r\n                list-style:none;\r\n                padding:0;\r\n                a {\r\n                    font-size: em(12);\r\n                    text-decoration: none;\r\n                    color: $text-3-clr;\r\n                    &:hover {\r\n                        color: $text-clr;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        .logo {\r\n            @include span-columns(3);\r\n        }\r\n        .footer-col {\r\n            h6 {\r\n                margin:0;\r\n                font-size: em(12);\r\n                text-transform: uppercase;\r\n                font-weight: bold;\r\n                color:$text-clr;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@include media($tablet) {\r\n    body {\r\n        font-size:14px;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n    .container {\r\n        padding:0 20px;\r\n    }\r\n    .main-nav {\r\n        display:none;\r\n    }\r\n    .header {\r\n        margin-top:40px;\r\n        margin-bottom:20px;\r\n        text-align:center;\r\n        .logo {\r\n            float:none;\r\n        }\r\n        .container {\r\n            padding:0;\r\n        }\r\n    }\r\n    .intro-overlay {\r\n        padding:0;\r\n    }\r\n    .intro-headline {\r\n        h1 {\r\n            font-size:30px;\r\n        }\r\n        h2 {\r\n            font-size:18px;\r\n        }\r\n    }\r\n    .intro-actions {\r\n        .free-label {\r\n            display:none;\r\n        }\r\n    }\r\n    .intro-shots {\r\n        min-width:0;\r\n        margin-top:0;\r\n        height:400px;\r\n        .desktop {\r\n            display:none;\r\n        }\r\n        .mobile {\r\n            left:50%;\r\n            margin-left:-130px\r\n        }\r\n    }\r\n    .landing-section {\r\n        &.bottom {\r\n            padding-bottom:100px;\r\n        }\r\n        h3, h4 {\r\n        }\r\n    }\r\n    .features {\r\n        margin:20px 0;\r\n        .feature {\r\n            text-align:center;\r\n            @include span-columns(8);\r\n            margin-bottom:40px;\r\n            .image {\r\n                margin-bottom:10px;\r\n                img {\r\n                    position:static;\r\n                }\r\n            }\r\n            h5 {\r\n                font-size: 24px;\r\n            }\r\n            p {\r\n                font-size: 16px;\r\n            }\r\n        }\r\n    }\r\n    .questions-section {\r\n        margin-top:40px;\r\n        text-align:center;\r\n        .questions-col {\r\n            @include span-columns(8);\r\n        }\r\n    }\r\n    .footer-section {\r\n        .footer {\r\n            text-align:center;\r\n            .menu {\r\n                display:none;\r\n            }\r\n            .about, .social, .logo {\r\n                @include span-columns(8);\r\n            }\r\n            .logo {\r\n                margin-bottom:20px;\r\n            }\r\n            .social {\r\n                margin-bottom:20px;\r\n                h6 {\r\n                    display:none;\r\n                }\r\n                .links {\r\n                    margin:0;\r\n                    li {\r\n                        display:inline-block;\r\n                        margin-right: 10px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Settings\r\n@import \"settings/prefixer\";\r\n@import \"settings/px-to-em\";\r\n@import \"settings/asset-pipeline\";\r\n\r\n// Custom Helpers\r\n@import \"helpers/convert-units\";\r\n@import \"helpers/gradient-positions-parser\";\r\n@import \"helpers/is-num\";\r\n@import \"helpers/linear-angle-parser\";\r\n@import \"helpers/linear-gradient-parser\";\r\n@import \"helpers/linear-positions-parser\";\r\n@import \"helpers/linear-side-corner-parser\";\r\n@import \"helpers/radial-arg-parser\";\r\n@import \"helpers/radial-positions-parser\";\r\n@import \"helpers/radial-gradient-parser\";\r\n@import \"helpers/render-gradients\";\r\n@import \"helpers/shape-size-stripper\";\r\n@import \"helpers/str-to-num\";\r\n\r\n// Custom Functions\r\n@import \"functions/assign\";\r\n@import \"functions/color-lightness\";\r\n@import \"functions/flex-grid\";\r\n@import \"functions/golden-ratio\";\r\n@import \"functions/grid-width\";\r\n@import \"functions/modular-scale\";\r\n@import \"functions/px-to-em\";\r\n@import \"functions/px-to-rem\";\r\n@import \"functions/strip-units\";\r\n@import \"functions/tint-shade\";\r\n@import \"functions/transition-property-name\";\r\n@import \"functions/unpack\";\r\n\r\n// CSS3 Mixins\r\n@import \"css3/animation\";\r\n@import \"css3/appearance\";\r\n@import \"css3/backface-visibility\";\r\n@import \"css3/background\";\r\n@import \"css3/background-image\";\r\n@import \"css3/border-image\";\r\n@import \"css3/border-radius\";\r\n@import \"css3/box-sizing\";\r\n@import \"css3/calc\";\r\n@import \"css3/columns\";\r\n@import \"css3/filter\";\r\n@import \"css3/flex-box\";\r\n@import \"css3/font-face\";\r\n@import \"css3/font-feature-settings\";\r\n@import \"css3/hyphens\";\r\n@import \"css3/hidpi-media-query\";\r\n@import \"css3/image-rendering\";\r\n@import \"css3/keyframes\";\r\n@import \"css3/linear-gradient\";\r\n@import \"css3/perspective\";\r\n@import \"css3/radial-gradient\";\r\n@import \"css3/transform\";\r\n@import \"css3/transition\";\r\n@import \"css3/user-select\";\r\n@import \"css3/placeholder\";\r\n\r\n// Addons & other mixins\r\n@import \"addons/button\";\r\n@import \"addons/clearfix\";\r\n@import \"addons/directional-values\";\r\n@import \"addons/ellipsis\";\r\n@import \"addons/font-family\";\r\n@import \"addons/hide-text\";\r\n@import \"addons/html5-input-types\";\r\n@import \"addons/position\";\r\n@import \"addons/prefixer\";\r\n@import \"addons/retina-image\";\r\n@import \"addons/size\";\r\n@import \"addons/timing-functions\";\r\n@import \"addons/triangle\";\r\n@import \"addons/word-wrap\";\r\n\r\n// Soon to be deprecated Mixins\r\n@import \"bourbon-deprecated-upcoming\";\r\n","// Variable settings for /addons/prefixer.scss\r\n$prefix-for-webkit:    true !default;\r\n$prefix-for-mozilla:   true !default;\r\n$prefix-for-microsoft: true !default;\r\n$prefix-for-opera:     true !default;\r\n$prefix-for-spec:      true !default; // required for keyframe mixin\r\n","$em-base: 16px !default;\r\n","$asset-pipeline: false !default;\r\n","//************************************************************************//\r\n// Helper function for str-to-num fn.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _convert-units($number, $unit) {\r\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax', 'deg', 'rad', 'grad', 'turn';\r\n  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax,  1deg,  1rad,  1grad, 1turn;\r\n  $index: index($strings, $unit);\r\n\r\n  @if not $index {\r\n    @warn \"Unknown unit `#{$unit}`.\";\r\n    @return false;\r\n  }\r\n  @return $number * nth($units, $index);\r\n}\r\n","@function _gradient-positions-parser($gradient-type, $gradient-positions) {\r\n  @if $gradient-positions\r\n  and ($gradient-type == linear)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _linear-positions-parser($gradient-positions);\r\n  }\r\n  @else if $gradient-positions\r\n  and ($gradient-type == radial)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _radial-positions-parser($gradient-positions);\r\n  }\r\n  @return $gradient-positions;\r\n}\r\n","//************************************************************************//\r\n// Helper for linear-gradient-parser\r\n//************************************************************************//\r\n@function _is-num($char) {\r\n  $values: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 0 1 2 3 4 5 6 7 8 9;\r\n  $index: index($values, $char);\r\n  @return if($index, true, false);\r\n}\r\n","// Private function for linear-gradient-parser\r\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\r\n  $offset: null;\r\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\r\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\r\n\r\n  @if ($unit-long == \"grad\") or\r\n      ($unit-long == \"turn\") {\r\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\r\n  }\r\n\r\n  @else if ($unit-short == \"deg\") or\r\n           ($unit-short == \"rad\") {\r\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\r\n  }\r\n\r\n  @if $offset {\r\n    $num: _str-to-num($first-val);\r\n\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n}\r\n","@function _linear-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 0, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $has-multiple-vals: str-index($first-val, \" \");\r\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\r\n  $has-angle: _is-num(str-slice($first-val, 0, 0));\r\n\r\n  @if $has-multiple-vals {\r\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\r\n  }\r\n\r\n  @else if $has-single-position != \"\" {\r\n    $pos: unquote($has-single-position + \"\");\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n\r\n  @else if $has-angle {\r\n    // Rotate degree for webkit\r\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n","@function _linear-positions-parser($pos) {\r\n  $type: type-of(nth($pos, 1));\r\n  $spec: null;\r\n  $degree: null;\r\n  $side: null;\r\n  $corner: null;\r\n  $length: length($pos);\r\n  // Parse Side and corner positions\r\n  @if ($length > 1) {\r\n    @if nth($pos, 1) == \"to\" { // Newer syntax\r\n      $side: nth($pos, 2);\r\n\r\n      @if $length == 2 { // eg. to top\r\n        // Swap for backwards compatability\r\n        $degree: _position-flipper(nth($pos, 2));\r\n      }\r\n      @else if $length == 3 { // eg. to top left\r\n        $corner: nth($pos, 3);\r\n      }\r\n    }\r\n    @else if $length == 2 { // Older syntax (\"top left\")\r\n      $side: _position-flipper(nth($pos, 1));\r\n      $corner: _position-flipper(nth($pos, 2));\r\n    }\r\n\r\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    $spec: to $side $corner;\r\n  }\r\n  @else if $length == 1 {\r\n    // Swap for backwards compatability\r\n    @if $type == string {\r\n      $degree: $pos;\r\n      $spec: to _position-flipper($pos);\r\n    }\r\n    @else {\r\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\r\n      $spec: $pos;\r\n    }\r\n  }\r\n  $degree: unquote($degree + \",\");\r\n  $spec:   unquote($spec + \",\");\r\n  @return $degree $spec;\r\n}\r\n\r\n@function _position-flipper($pos) {\r\n @return if($pos == left, right, null)\r\n         if($pos == right, left, null)\r\n         if($pos == top, bottom, null)\r\n         if($pos == bottom, top, null);\r\n}\r\n","// Private function for linear-gradient-parser\r\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\r\n  $val-1: str-slice($first-val, 0, $has-multiple-vals - 1 );\r\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\r\n  $val-3: null;\r\n  $has-val-3: str-index($val-2, \" \");\r\n\r\n  @if $has-val-3 {\r\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\r\n    $val-2: str-slice($val-2, 0, $has-val-3 - 1);\r\n  }\r\n\r\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\r\n  $pos: unquote($pos + \"\");\r\n\r\n  // Use old spec for webkit\r\n  @if $val-1 == \"to\" {\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  // Bring the code up to spec\r\n  @else {\r\n    @return (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n}\r\n","@function _radial-arg-parser($G1, $G2, $pos, $shape-size) {\r\n  @each $value in $G1, $G2 {\r\n    $first-val: nth($value, 1);\r\n    $pos-type:  type-of($first-val);\r\n    $spec-at-index: null;\r\n\r\n    // Determine if spec was passed to mixin\r\n    @if type-of($value) == list {\r\n      $spec-at-index: if(index($value, at), index($value, at), false);\r\n    }\r\n    @if $spec-at-index {\r\n      @if $spec-at-index > 1 {\r\n        @for $i from 1 through ($spec-at-index - 1) {\r\n          $shape-size: $shape-size nth($value, $i);\r\n        }\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      @else if $spec-at-index == 1 {\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      $G1: null;\r\n    }\r\n\r\n    // If not spec calculate correct values\r\n    @else {\r\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\r\n        @if ($pos-type == number)\r\n        or ($first-val == \"center\")\r\n        or ($first-val == \"top\")\r\n        or ($first-val == \"right\")\r\n        or ($first-val == \"bottom\")\r\n        or ($first-val == \"left\") {\r\n\r\n          $pos: $value;\r\n\r\n          @if $pos == $G1 {\r\n            $G1: null;\r\n          }\r\n        }\r\n\r\n        @else if\r\n           ($first-val == \"ellipse\")\r\n        or ($first-val == \"circle\")\r\n        or ($first-val == \"closest-side\")\r\n        or ($first-val == \"closest-corner\")\r\n        or ($first-val == \"farthest-side\")\r\n        or ($first-val == \"farthest-corner\")\r\n        or ($first-val == \"contain\")\r\n        or ($first-val == \"cover\") {\r\n\r\n          $shape-size: $value;\r\n\r\n          @if $value == $G1 {\r\n            $G1: null;\r\n          }\r\n\r\n          @else if $value == $G2 {\r\n            $G2: null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @return $G1, $G2, $pos, $shape-size;\r\n}\r\n","@function _radial-positions-parser($gradient-pos) {\r\n  $shape-size: nth($gradient-pos, 1);\r\n  $pos:        nth($gradient-pos, 2);\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\r\n             unquote(if($shape-size, \"#{$shape-size},\", null));\r\n  $pos-spec: if($pos, \"at #{$pos}\", null);\r\n\r\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\r\n\r\n  // Add comma\r\n  @if ($spec != '  ') {\r\n    $spec: \"#{$spec},\"\r\n  }\r\n\r\n  @return $pre-spec $spec;\r\n}\r\n","@function _radial-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 0, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $is-spec-syntax: str-index($first-val, \"at\");\r\n\r\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\r\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n    $pos: append($pos, $keyword, comma);\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    )\r\n  }\r\n\r\n  @else if $is-spec-syntax == 1 {\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    )\r\n  }\r\n\r\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\r\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\r\n\r\n    $gradients: (\r\n      webkit-image: null,\r\n      spec-image: $image\r\n    )\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    )\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n","// User for linear and radial gradients within background-image or border-image properties\r\n\r\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\r\n  $pre-spec: null;\r\n  $spec: null;\r\n  $vendor-gradients: null;\r\n  @if $gradient-type == linear {\r\n    @if $gradient-positions {\r\n      $pre-spec: nth($gradient-positions, 1);\r\n      $spec:     nth($gradient-positions, 2);\r\n    }\r\n  }\r\n  @else if $gradient-type == radial {\r\n    $pre-spec: nth($gradient-positions, 1);\r\n    $spec:     nth($gradient-positions, 2);\r\n  }\r\n\r\n  @if $vendor {\r\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\r\n  }\r\n  @else if $vendor == false {\r\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\r\n    $vendor-gradients: unquote($vendor-gradients);\r\n  }\r\n  @return $vendor-gradients;\r\n}\r\n","@function _shape-size-stripper($shape-size) {\r\n  $shape-size-spec: null;\r\n  @each $value in $shape-size {\r\n    @if ($value == \"cover\") or ($value == \"contain\") {\r\n      $value: null;\r\n    }\r\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\r\n  }\r\n  @return $shape-size-spec;\r\n}\r\n","//************************************************************************//\r\n// Helper function for linear/radial-gradient-parsers.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _str-to-num($string) {\r\n  // Matrices\r\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\r\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == '-' {\r\n      $minus: true;\r\n    }\r\n\r\n    @else if $character == '.' {\r\n      $divider: 1;\r\n    }\r\n\r\n    @else {\r\n      @if not $index {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _convert-units($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      }\r\n\r\n      @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n","@function assign-inputs($inputs, $pseudo: null) {\r\n  $list : ();\r\n\r\n  @each $input in $inputs {\r\n    $input: unquote($input);\r\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\r\n    $list: append($list, $input, comma);\r\n  }\r\n\r\n  @return $list;\r\n}","// Programatically determines whether a color is light or dark\r\n// Returns a boolean\r\n// More details here http://robots.thoughtbot.com/closer-look-color-lightness\r\n\r\n@function is-light($hex-color) {\r\n  $-local-red: red(rgba($hex-color, 1.0));\r\n  $-local-green: green(rgba($hex-color, 1.0));\r\n  $-local-blue: blue(rgba($hex-color, 1.0));\r\n\r\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\r\n\r\n  @return $-local-lightness > .6;\r\n}\r\n","// Flexible grid\r\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\r\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($width / $container-width);\r\n}\r\n\r\n// Flexible gutter\r\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($gutter / $container-width);\r\n}\r\n\r\n// The $fg-column, $fg-gutter and $fg-max-columns variables must be defined in your base stylesheet to properly use the flex-grid function.\r\n// This function takes the fluid grid equation (target / context = result) and uses columns to help define each.\r\n//\r\n// The calculation presumes that your column structure will be missing the last gutter:\r\n//\r\n//   -- column -- gutter -- column -- gutter -- column\r\n//\r\n//  $fg-column: 60px;             // Column Width\r\n//  $fg-gutter: 25px;             // Gutter Width\r\n//  $fg-max-columns: 12;          // Total Columns For Main Container\r\n//\r\n//  div {\r\n//    width: flex-grid(4);        // returns (315px / 995px) = 31.65829%;\r\n//    margin-left: flex-gutter(); // returns (25px / 995px) = 2.51256%;\r\n//\r\n//    p {\r\n//      width: flex-grid(2, 4);  // returns (145px / 315px) = 46.031746%;\r\n//      float: left;\r\n//      margin: flex-gutter(4);  // returns (25px / 315px) = 7.936508%;\r\n//    }\r\n//\r\n//    blockquote {\r\n//      float: left;\r\n//      width: flex-grid(2, 4); // returns (145px / 315px) = 46.031746%;\r\n//    }\r\n//  }","@function golden-ratio($value, $increment) {\r\n  @return modular-scale($value, $increment, $golden)\r\n}\r\n","@function grid-width($n) {\r\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\r\n}\r\n\r\n// The $gw-column and $gw-gutter variables must be defined in your base stylesheet to properly use the grid-width function.\r\n//\r\n//  $gw-column: 100px;         // Column Width\r\n//  $gw-gutter: 40px;          // Gutter Width\r\n//\r\n//  div {\r\n//    width: grid-width(4);    // returns 520px;\r\n//    margin-left: $gw-gutter; // returns 40px;\r\n//  }\r\n","// Scaling Variables\r\n$golden:           1.618;\r\n$minor-second:     1.067;\r\n$major-second:     1.125;\r\n$minor-third:      1.2;\r\n$major-third:      1.25;\r\n$perfect-fourth:   1.333;\r\n$augmented-fourth: 1.414;\r\n$perfect-fifth:    1.5;\r\n$minor-sixth:      1.6;\r\n$major-sixth:      1.667;\r\n$minor-seventh:    1.778;\r\n$major-seventh:    1.875;\r\n$octave:           2;\r\n$major-tenth:      2.5;\r\n$major-eleventh:   2.667;\r\n$major-twelfth:    3;\r\n$double-octave:    4;\r\n\r\n@function modular-scale($value, $increment, $ratio) {\r\n  $v1: nth($value, 1);\r\n  $v2: nth($value, length($value));\r\n  $value: $v1;\r\n\r\n  // scale $v2 to just above $v1\r\n  @while $v2 > $v1 {\r\n    $v2: ($v2 / $ratio); // will be off-by-1\r\n  }\r\n  @while $v2 < $v1 {\r\n    $v2: ($v2 * $ratio); // will fix off-by-1\r\n  }\r\n\r\n  // check AFTER scaling $v2 to prevent double-counting corner-case\r\n  $double-stranded: $v2 > $v1;\r\n\r\n  @if $increment > 0 {\r\n    @for $i from 1 through $increment {\r\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 * $ratio);\r\n      } @else {\r\n        $v1: ($v1 * $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @if $increment < 0 {\r\n    // adjust $v2 to just below $v1\r\n    @if $double-stranded {\r\n      $v2: ($v2 / $ratio);\r\n    }\r\n\r\n    @for $i from $increment through -1 {\r\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 / $ratio);\r\n      } @else {\r\n        $v1: ($v1 / $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $value;\r\n}\r\n","// Convert pixels to ems\r\n// eg. for a relational value of 12px write em(12) when the parent is 16px\r\n// if the parent is another value say 24px write em(12, 24)\r\n\r\n@function em($pxval, $base: $em-base) {\r\n  @if not unitless($pxval) {\r\n      $pxval: strip-units($pxval);\r\n  }\r\n  @if not unitless($base) {\r\n      $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1em;\r\n}\r\n","// Convert pixels to rems\r\n// eg. for a relational value of 12px write rem(12)\r\n// Assumes $em-base is the font-size of <html>\r\n\r\n@function rem($pxval) {\r\n  @if not unitless($pxval) {\r\n      $pxval: strip-units($pxval);\r\n  }\r\n\r\n  $base: $em-base;\r\n  @if not unitless($base) {\r\n      $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1rem;\r\n}\r\n","// Srtips the units from a value. e.g. 12px -> 12\r\n\r\n@function strip-units($val) {\r\n  @return ($val / ($val * 0 + 1));\r\n}\r\n","// Add percentage of white to a color\r\n@function tint($color, $percent){\r\n  @return mix(white, $color, $percent);\r\n}\r\n\r\n// Add percentage of black to a color\r\n@function shade($color, $percent){\r\n  @return mix(black, $color, $percent);\r\n}\r\n","// Return vendor-prefixed property names if appropriate\r\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\r\n//************************************************************************//\r\n@function transition-property-names($props, $vendor: false) {\r\n\t$new-props: ();\r\n\t\r\n\t@each $prop in $props {\r\n\t\t$new-props: append($new-props, transition-property-name($prop, $vendor), comma);\r\n\t}\r\n\r\n\t@return $new-props;\r\n}\r\n\r\n@function transition-property-name($prop, $vendor: false) {\r\n\t// put other properties that need to be prefixed here aswell\r\n\t@if $vendor and $prop == transform {\r\n\t\t@return unquote('-'+$vendor+'-'+$prop);\r\n\t}\r\n\t@else {\r\n\t\t@return $prop;\r\n\t}\r\n}","// Convert shorthand to the 4-value syntax\r\n\r\n@function unpack($shorthand) {\r\n  @if length($shorthand) == 1 {\r\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\r\n  }\r\n  @else if length($shorthand) == 2 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\r\n  }\r\n  @else if length($shorthand) == 3 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\r\n  }\r\n  @else {\r\n    @return $shorthand;\r\n  }\r\n}\r\n\r\n","// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\r\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\r\n\r\n// Official animation shorthand property.\r\n@mixin animation ($animations...) {\r\n  @include prefixer(animation, $animations, webkit moz spec);\r\n}\r\n\r\n// Individual Animation Properties\r\n@mixin animation-name ($names...) {\r\n  @include prefixer(animation-name, $names, webkit moz spec);\r\n}\r\n\r\n\r\n@mixin animation-duration ($times...) {\r\n  @include prefixer(animation-duration, $times, webkit moz spec);\r\n}\r\n\r\n\r\n@mixin animation-timing-function ($motions...) {\r\n// ease | linear | ease-in | ease-out | ease-in-out\r\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n\r\n@mixin animation-iteration-count ($values...) {\r\n// infinite | <number>\r\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\r\n}\r\n\r\n\r\n@mixin animation-direction ($directions...) {\r\n// normal | alternate\r\n  @include prefixer(animation-direction, $directions, webkit moz spec);\r\n}\r\n\r\n\r\n@mixin animation-play-state ($states...) {\r\n// running | paused\r\n  @include prefixer(animation-play-state, $states, webkit moz spec);\r\n}\r\n\r\n\r\n@mixin animation-delay ($times...) {\r\n  @include prefixer(animation-delay, $times, webkit moz spec);\r\n}\r\n\r\n\r\n@mixin animation-fill-mode ($modes...) {\r\n// none | forwards | backwards | both\r\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\r\n}\r\n","@mixin appearance ($value) {\r\n  @include prefixer(appearance, $value, webkit moz ms o spec);\r\n}\r\n","//************************************************************************//\r\n// Backface-visibility mixin\r\n//************************************************************************//\r\n@mixin backface-visibility($visibility) {\r\n  @include prefixer(backface-visibility, $visibility, webkit spec);\r\n}\r\n","//************************************************************************//\r\n// Background property for adding multiple backgrounds using shorthand\r\n// notation.\r\n//************************************************************************//\r\n\r\n@mixin background($backgrounds...) {\r\n  $webkit-backgrounds: ();\r\n  $spec-backgrounds: ();\r\n\r\n  @each $background in $backgrounds {\r\n    $webkit-background: ();\r\n    $spec-background: ();\r\n    $background-type: type-of($background);\r\n\r\n    @if $background-type == string or list {\r\n      $background-str: if($background-type == list, nth($background, 1), $background);\r\n\r\n      $url-str:       str-slice($background-str, 0, 3);\r\n      $gradient-type: str-slice($background-str, 0, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-background: $background;\r\n          $spec-background: $background;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-background: $background;\r\n          $spec-background: $background;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-background: $background;\r\n        $spec-background: $background;\r\n    }\r\n\r\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\r\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\r\n  }\r\n\r\n  background: $webkit-backgrounds;\r\n  background: $spec-backgrounds;\r\n}\r\n","//************************************************************************//\r\n// Background-image property for adding multiple background images with\r\n// gradients, or for stringing multiple gradients together.\r\n//************************************************************************//\r\n\r\n@mixin background-image($images...) {\r\n  $webkit-images: ();\r\n  $spec-images: ();\r\n\r\n  @each $image in $images {\r\n    $webkit-image: ();\r\n    $spec-image: ();\r\n\r\n    @if (type-of($image) == string) {\r\n      $url-str:       str-slice($image, 0, 3);\r\n      $gradient-type: str-slice($image, 0, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-image: $image;\r\n          $spec-image: $image;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser($image);\r\n        $webkit-image:  map-get($gradients, webkit-image);\r\n        $spec-image:    map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser($image);\r\n        $webkit-image: map-get($gradients, webkit-image);\r\n        $spec-image:   map-get($gradients, spec-image);\r\n      }\r\n    }\r\n\r\n    $webkit-images: append($webkit-images, $webkit-image, comma);\r\n    $spec-images:   append($spec-images,   $spec-image,   comma);\r\n  }\r\n\r\n  background-image: $webkit-images;\r\n  background-image: $spec-images;\r\n}\r\n","@mixin border-image($borders...) {\r\n  $webkit-borders: ();\r\n  $spec-borders: ();\r\n\r\n  @each $border in $borders {\r\n    $webkit-border: ();\r\n    $spec-border: ();\r\n    $border-type: type-of($border);\r\n\r\n    @if $border-type == string or list {\r\n      $border-str: if($border-type == list, nth($border, 1), $border);\r\n\r\n      $url-str:       str-slice($border-str, 0, 3);\r\n      $gradient-type: str-slice($border-str, 0, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-border: $border;\r\n          $spec-border: $border;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-border: $border;\r\n          $spec-border: $border;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-border: $border;\r\n        $spec-border: $border;\r\n    }\r\n\r\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\r\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\r\n  }\r\n\r\n  -webkit-border-image: $webkit-borders;\r\n          border-image: $spec-borders;\r\n          border-style: solid;\r\n}\r\n\r\n//Examples:\r\n// @include border-image(url(\"image.png\"));\r\n// @include border-image(url(\"image.png\") 20 stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow));\r\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\r\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\r\n","//************************************************************************//\r\n// Shorthand Border-radius mixins\r\n//************************************************************************//\r\n@mixin border-top-radius($radii) {\r\n  @include prefixer(border-top-left-radius, $radii, spec);\r\n  @include prefixer(border-top-right-radius, $radii, spec);\r\n}\r\n\r\n@mixin border-bottom-radius($radii) {\r\n  @include prefixer(border-bottom-left-radius, $radii, spec);\r\n  @include prefixer(border-bottom-right-radius, $radii, spec);\r\n}\r\n\r\n@mixin border-left-radius($radii) {\r\n  @include prefixer(border-top-left-radius, $radii, spec);\r\n  @include prefixer(border-bottom-left-radius, $radii, spec);\r\n}\r\n\r\n@mixin border-right-radius($radii) {\r\n  @include prefixer(border-top-right-radius, $radii, spec);\r\n  @include prefixer(border-bottom-right-radius, $radii, spec);\r\n}\r\n","@mixin box-sizing ($box) {\r\n//  content-box | border-box | inherit\r\n  @include prefixer(box-sizing, $box, webkit moz spec);\r\n}\r\n","@mixin calc($property, $value) {\r\n  #{$property}: -webkit-calc(#{$value});\r\n  #{$property}:         calc(#{$value});\r\n}\r\n","@mixin columns($arg: auto) {\r\n// <column-count> || <column-width>\r\n  @include prefixer(columns, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-count($int: auto) {\r\n// auto || integer\r\n  @include prefixer(column-count, $int, webkit moz spec);\r\n}\r\n\r\n@mixin column-gap($length: normal) {\r\n// normal || length\r\n  @include prefixer(column-gap, $length, webkit moz spec);\r\n}\r\n\r\n@mixin column-fill($arg: auto) {\r\n// auto || length\r\n  @include prefixer(column-fill, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule($arg) {\r\n// <border-width> || <border-style> || <color>\r\n  @include prefixer(column-rule, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-color($color) {\r\n  @include prefixer(column-rule-color, $color, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-style($style: none) {\r\n// none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\r\n  @include prefixer(column-rule-style, $style, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-width ($width: none) {\r\n  @include prefixer(column-rule-width, $width, webkit moz spec);\r\n}\r\n\r\n@mixin column-span($arg: none) {\r\n// none || all\r\n  @include prefixer(column-span, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-width($length: auto) {\r\n// auto || length\r\n  @include prefixer(column-width, $length, webkit moz spec);\r\n}\r\n","@mixin filter($function: none) {\r\n  // <filter-function> [<filter-function]* | none\r\n  @include prefixer(filter, $function, webkit spec);\r\n}\r\n\r\n","// CSS3 Flexible Box Model and property defaults\r\n\r\n// Custom shorthand notation for flexbox\r\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\r\n  @include display-box;\r\n  @include box-orient($orient);\r\n  @include box-pack($pack);\r\n  @include box-align($align);\r\n}\r\n\r\n@mixin display-box {\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: -ms-flexbox; // IE 10\r\n  display: box;\r\n}\r\n\r\n@mixin box-orient($orient: inline-axis) {\r\n// horizontal|vertical|inline-axis|block-axis|inherit\r\n  @include prefixer(box-orient, $orient, webkit moz spec);\r\n}\r\n\r\n@mixin box-pack($pack: start) {\r\n// start|end|center|justify\r\n  @include prefixer(box-pack, $pack, webkit moz spec);\r\n  -ms-flex-pack: $pack; // IE 10\r\n}\r\n\r\n@mixin box-align($align: stretch) {\r\n// start|end|center|baseline|stretch\r\n  @include prefixer(box-align, $align, webkit moz spec);\r\n  -ms-flex-align: $align; // IE 10\r\n}\r\n\r\n@mixin box-direction($direction: normal) {\r\n// normal|reverse|inherit\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n  -ms-flex-direction: $direction; // IE 10\r\n}\r\n\r\n@mixin box-lines($lines: single) {\r\n// single|multiple\r\n  @include prefixer(box-lines, $lines, webkit moz spec);\r\n}\r\n\r\n@mixin box-ordinal-group($int: 1) {\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n  -ms-flex-order: $int; // IE 10\r\n}\r\n\r\n@mixin box-flex($value: 0.0) {\r\n  @include prefixer(box-flex, $value, webkit moz spec);\r\n  -ms-flex: $value; // IE 10\r\n}\r\n\r\n@mixin box-flex-group($int: 1) {\r\n  @include prefixer(box-flex-group, $int, webkit moz spec);\r\n}\r\n\r\n// CSS3 Flexible Box Model and property defaults\r\n// Unified attributes for 2009, 2011, and 2012 flavours.\r\n\r\n// 2009 - display (box | inline-box)\r\n// 2011 - display (flexbox | inline-flexbox)\r\n// 2012 - display (flex | inline-flex)\r\n@mixin display($value) {\r\n//  flex | inline-flex\r\n    @if $value == \"flex\" {\r\n        // 2009\r\n        display: -webkit-box;\r\n        display: -moz-box;\r\n        display: box;\r\n\r\n        // 2012\r\n        display: -webkit-flex;\r\n        display: -moz-flex;\r\n        display: -ms-flexbox; // 2011 (IE 10)\r\n        display: flex;\r\n    }\r\n\r\n    @elseif $value == \"inline-flex\" {\r\n        display: -webkit-inline-box;\r\n        display: -moz-inline-box;\r\n        display: inline-box;\r\n\r\n        display: -webkit-inline-flex;\r\n        display: -moz-inline-flex;\r\n        display: -ms-inline-flexbox;\r\n        display: inline-flex;\r\n    }\r\n\r\n    @else {\r\n        display: $value;\r\n    }\r\n}\r\n\r\n// 2009 - box-flex (integer)\r\n// 2011 - flex (decimal | width decimal)\r\n// 2012 - flex (integer integer width)\r\n@mixin flex($value) {\r\n\r\n    // Grab flex-grow for older browsers.\r\n    $flex-grow: nth($value, 1);\r\n\r\n    // 2009\r\n    @include prefixer(box-flex, $flex-grow, webkit moz spec);\r\n\r\n    // 2011 (IE 10), 2012\r\n    @include prefixer(flex, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\r\n//      - box-direction (normal | reverse)      \r\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\r\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\r\n@mixin flex-direction($value: row) {\r\n\r\n    // Alt values.\r\n    $value-2009: $value;\r\n    $value-2011: $value;\r\n    $direction: \"normal\";\r\n\r\n    @if $value == row {\r\n        $value-2009: horizontal;\r\n    }\r\n\r\n    @elseif $value == \"row-reverse\" {\r\n        $value-2009: horizontal;\r\n        $direction: reverse;\r\n    }\r\n\r\n    @elseif $value == column {\r\n        $value-2009: vertical;\r\n    }\r\n\r\n    @elseif $value == \"column-reverse\" {\r\n        $value-2009: vertical;\r\n        $direction: reverse;\r\n    }\r\n\r\n    // 2009\r\n    @include prefixer(box-orient, $value-2009, webkit moz spec);\r\n    @if $direction == \"reverse\" {\r\n        @include prefixer(box-direction, $direction, webkit moz spec);\r\n    }\r\n\r\n    // 2012\r\n    @include prefixer(flex-direction, $value, webkit moz spec);\r\n\r\n    // 2011 (IE 10)\r\n    -ms-flex-direction: $value;\r\n}\r\n\r\n// 2009 - box-lines (single | multiple)\r\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n@mixin flex-wrap($value: nowrap) {\r\n\r\n    // Alt values.\r\n    $alt-value: $value;\r\n    @if $value == nowrap {\r\n        $alt-value: single;\r\n    }\r\n\r\n    @elseif $value == wrap {\r\n        $alt-value: multiple;\r\n    }\r\n\r\n    @elseif $value == \"wrap-reverse\" {\r\n        $alt-value: multiple;\r\n    }\r\n\r\n    @include prefixer(box-lines, $alt-value, webkit moz spec);\r\n    @include prefixer(flex-wrap, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - TODO: parse values into flex-direction/flex-wrap\r\n// 2011 - TODO: parse values into flex-direction/flex-wrap\r\n// 2012 - flex-flow (flex-direction || flex-wrap)\r\n@mixin flex-flow($value) {\r\n    @include prefixer(flex-flow, $value, webkit moz spec);\r\n}\r\n\r\n// 2009 - box-ordinal-group (integer)\r\n// 2011 - flex-order (integer)\r\n// 2012 - order (integer)\r\n@mixin order($int: 0) {\r\n    // 2009\r\n    @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n\r\n    // 2012\r\n    @include prefixer(order, $int, webkit moz spec);\r\n\r\n    // 2011 (IE 10)\r\n    -ms-flex-order: $int;\r\n}\r\n\r\n// 2012 - flex-grow (number)\r\n@mixin flex-grow($number: 0) {\r\n    @include prefixer(flex-grow, $number, webkit moz spec);\r\n    -ms-flex-positive: $number;\r\n}\r\n\r\n// 2012 - flex-shrink (number)\r\n@mixin flex-shrink($number: 1) {\r\n    @include prefixer(flex-shrink, $number, webkit moz spec);\r\n    -ms-flex-negative: $number;\r\n}\r\n\r\n// 2012 - flex-basis (number)\r\n@mixin flex-basis($width: auto) {\r\n    @include prefixer(flex-basis, $width, webkit moz spec);\r\n    -ms-flex-preferred-size: $width;\r\n}\r\n\r\n// 2009 - box-pack (start | end | center | justify)\r\n// 2011 - flex-pack (start | end | center | justify)\r\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\r\n@mixin justify-content ($value: flex-start) {\r\n\r\n    // Alt values.\r\n    $alt-value: $value;\r\n    @if $value == \"flex-start\" {\r\n        $alt-value: start;\r\n    }\r\n\r\n    @elseif $value == \"flex-end\" {\r\n        $alt-value: end;\r\n    }\r\n\r\n    @elseif $value == \"space-between\" {\r\n        $alt-value: justify;\r\n    }\r\n\r\n    @elseif $value == \"space-around\" {\r\n        $alt-value: center;\r\n    }\r\n\r\n    // 2009\r\n    @include prefixer(box-pack, $alt-value, webkit moz spec);\r\n\r\n    // 2012\r\n    @include prefixer(justify-content, $value, webkit moz ms o spec);\r\n\r\n    // 2011 (IE 10)\r\n    -ms-flex-pack: $alt-value;\r\n}\r\n\r\n// 2009 - box-align (start | end | center | baseline | stretch)\r\n// 2011 - flex-align (start | end | center | baseline | stretch)\r\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-items($value: stretch) {\r\n\r\n    $alt-value: $value;\r\n\r\n    @if $value == \"flex-start\" {\r\n        $alt-value: start;\r\n    }    \r\n\r\n    @elseif $value == \"flex-end\" {\r\n        $alt-value: end;\r\n    }\r\n\r\n    // 2009\r\n    @include prefixer(box-align, $alt-value, webkit moz spec);\r\n\r\n    // 2012\r\n    @include prefixer(align-items, $value, webkit moz ms o spec);\r\n    \r\n    // 2011 (IE 10)\r\n    -ms-flex-align: $alt-value;    \r\n}\r\n\r\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\r\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-self($value: auto) {\r\n\r\n    $value-2011: $value;\r\n    @if $value == \"flex-start\" {\r\n        $value-2011: start;\r\n    }    \r\n\r\n    @elseif $value == \"flex-end\" {\r\n        $value-2011: end;\r\n    }\r\n\r\n    // 2012\r\n    @include prefixer(align-self, $value, webkit moz spec);\r\n\r\n    // 2011 (IE 10)\r\n    -ms-flex-item-align: $value-2011;\r\n}\r\n\r\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\r\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\r\n@mixin align-content($value: stretch) {\r\n\r\n    $value-2011: $value;\r\n    @if $value == \"flex-start\" {\r\n        $value-2011: start;\r\n    }    \r\n\r\n    @elseif $value == \"flex-end\" {\r\n        $value-2011: end;\r\n    }\r\n\r\n    @elseif $value == \"space-between\" {\r\n        $value-2011: justify;\r\n    }\r\n\r\n    @elseif $value == \"space-around\" {\r\n        $value-2011: distribute;\r\n    }\r\n\r\n    // 2012\r\n    @include prefixer(align-content, $value, webkit moz spec);\r\n\r\n    // 2011 (IE 10)\r\n    -ms-flex-line-pack: $value-2011;\r\n}\r\n\r\n","// Order of the includes matters, and it is: normal, bold, italic, bold+italic.\r\n\r\n@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: $asset-pipeline) {\r\n  @font-face {\r\n    font-family: $font-family;\r\n    font-weight: $weight;\r\n    font-style: $style;\r\n\r\n    @if $asset-pipeline == true {\r\n      src: font-url('#{$file-path}.eot');\r\n      src: font-url('#{$file-path}.eot?#iefix')          format('embedded-opentype'),\r\n           font-url('#{$file-path}.woff')                format('woff'),\r\n           font-url('#{$file-path}.ttf')                 format('truetype'),\r\n           font-url('#{$file-path}.svg##{$font-family}') format('svg');\r\n    } @else {\r\n      src: url('#{$file-path}.eot');\r\n      src: url('#{$file-path}.eot?#iefix')               format('embedded-opentype'),\r\n           url('#{$file-path}.woff')                     format('woff'),\r\n           url('#{$file-path}.ttf')                      format('truetype'),\r\n           url('#{$file-path}.svg##{$font-family}')      format('svg');\r\n    }\r\n  }\r\n}\r\n","// Font feature settings mixin and property default.\r\n// Examples: @include font-feature-settings(\"liga\");\r\n//           @include font-feature-settings(\"lnum\" false);\r\n//           @include font-feature-settings(\"pnum\" 1, \"kern\" 0);\r\n//           @include font-feature-settings(\"ss01\", \"ss02\");\r\n\r\n@mixin font-feature-settings($settings...) {\r\n  @if length($settings) == 0 { $settings: none; }\r\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\r\n}","@mixin hyphens($hyphenation: none) {\r\n// none | manual | auto\r\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\r\n}","// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\r\n@mixin hidpi($ratio: 1.3) {\r\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\r\n  only screen and (min--moz-device-pixel-ratio: $ratio),\r\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\r\n  only screen and (min-resolution: #{round($ratio*96)}dpi),\r\n  only screen and (min-resolution: #{$ratio}dppx) {\r\n    @content;\r\n  }\r\n}\r\n","@mixin image-rendering ($mode:auto) {\r\n\r\n  @if ($mode == crisp-edges) {\r\n      -ms-interpolation-mode: nearest-neighbor; // IE8+\r\n      image-rendering: -moz-crisp-edges;\r\n      image-rendering: -o-crisp-edges;\r\n      image-rendering: -webkit-optimize-contrast;\r\n      image-rendering: crisp-edges;\r\n  }\r\n\r\n  @else {\r\n      image-rendering: $mode;\r\n  }\r\n}\r\n","// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\r\n@mixin keyframes($name) {\r\n  $original-prefix-for-webkit:    $prefix-for-webkit;\r\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\r\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\r\n  $original-prefix-for-opera:     $prefix-for-opera;\r\n  $original-prefix-for-spec:      $prefix-for-spec;\r\n\r\n  @if $original-prefix-for-webkit {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-webkit: true !global;\r\n    @-webkit-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n  @if $original-prefix-for-mozilla {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-mozilla: true !global;\r\n    @-moz-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\r\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\r\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\r\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\r\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\r\n\r\n  @if $original-prefix-for-spec {\r\n    @keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@mixin linear-gradient($pos, $G1, $G2: null,\r\n                       $G3: null, $G4: null,\r\n                       $G5: null, $G6: null,\r\n                       $G7: null, $G8: null,\r\n                       $G9: null, $G10: null,\r\n                       $fallback: null) {\r\n  // Detect what type of value exists in $pos\r\n  $pos-type: type-of(nth($pos, 1));\r\n  $pos-spec: null;\r\n  $pos-degree: null;\r\n\r\n  // If $pos is missing from mixin, reassign vars and add default position\r\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\r\n    $G10: $G9; $G9: $G8; $G8: $G7; $G7: $G6; $G6: $G5;\r\n     $G5: $G4; $G4: $G3; $G3: $G2; $G2: $G1; $G1: $pos;\r\n     $pos: null;\r\n  }\r\n\r\n  @if $pos {\r\n    $positions: _linear-positions-parser($pos);\r\n    $pos-degree: nth($positions, 1);\r\n    $pos-spec:   nth($positions, 2);\r\n  }\r\n\r\n  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;\r\n\r\n  // Set $G1 as the default fallback color\r\n  $fallback-color: nth($G1, 1);\r\n\r\n  // If $fallback is a color use that color as the fallback color\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  background-color: $fallback-color;\r\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\r\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\r\n}\r\n","@mixin perspective($depth: none) {\r\n  // none | <length>\r\n  @include prefixer(perspective, $depth, webkit moz spec);\r\n}\r\n\r\n@mixin perspective-origin($value: 50% 50%) {\r\n  @include prefixer(perspective-origin, $value, webkit moz spec);\r\n}\r\n","// Requires Sass 3.1+\r\n@mixin radial-gradient($G1,        $G2,\r\n                       $G3: null, $G4: null,\r\n                       $G5: null, $G6: null,\r\n                       $G7: null, $G8: null,\r\n                       $G9: null, $G10: null,\r\n                       $pos: null,\r\n                       $shape-size: null,\r\n                       $fallback: null) {\r\n\r\n  $data: _radial-arg-parser($G1, $G2, $pos, $shape-size);\r\n  $G1:  nth($data, 1);\r\n  $G2:  nth($data, 2);\r\n  $pos: nth($data, 3);\r\n  $shape-size: nth($data, 4);\r\n\r\n  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;\r\n\r\n  // Strip deprecated cover/contain for spec\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  // Set $G1 as the default fallback color\r\n  $first-color: nth($full, 1);\r\n  $fallback-color: nth($first-color, 1);\r\n\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  // Add Commas and spaces\r\n  $shape-size: if($shape-size, '#{$shape-size}, ', null);\r\n  $pos:        if($pos, '#{$pos}, ', null);\r\n  $pos-spec:   if($pos, 'at #{$pos}', null);\r\n  $shape-size-spec: if(($shape-size-spec != ' ') and ($pos == null), '#{$shape-size-spec}, ', '#{$shape-size-spec} ');\r\n\r\n  background-color:  $fallback-color;\r\n  background-image: -webkit-radial-gradient(unquote(#{$pos}#{$shape-size}#{$full}));\r\n  background-image: unquote(\"radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full})\");\r\n}\r\n","@mixin transform($property: none) {\r\n//  none | <transform-function>\r\n  @include prefixer(transform, $property, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-origin($axes: 50%) {\r\n// x-axis - left | center | right  | length | %\r\n// y-axis - top  | center | bottom | length | %\r\n// z-axis -                          length\r\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-style ($style: flat) {\r\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\r\n}\r\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\r\n// Example: @include transition (all 2s ease-in-out);\r\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\r\n//          @include transition-property (transform, opacity);\r\n\r\n@mixin transition ($properties...) {\r\n  // Fix for vendor-prefix transform property\r\n  $needs-prefixes: false;\r\n  $webkit: ();\r\n  $moz: ();\r\n  $spec: ();\r\n\r\n  // Create lists for vendor-prefixed transform\r\n  @each $list in $properties {\r\n    @if nth($list, 1) == \"transform\" {\r\n      $needs-prefixes: true;\r\n      $list1: -webkit-transform;\r\n      $list2: -moz-transform;\r\n      $list3: ();\r\n\r\n      @each $var in $list {\r\n        $list3: join($list3, $var);\r\n\r\n        @if $var != \"transform\" {\r\n          $list1: join($list1, $var);\r\n          $list2: join($list2, $var);\r\n        }\r\n      }\r\n\r\n      $webkit: append($webkit, $list1);\r\n         $moz: append($moz,    $list2);\r\n        $spec: append($spec,   $list3);\r\n    }\r\n\r\n    // Create lists for non-prefixed transition properties\r\n    @else {\r\n      $webkit:  append($webkit, $list, comma);\r\n      $moz:     append($moz,    $list, comma);\r\n      $spec:    append($spec,   $list, comma);\r\n    }\r\n  }\r\n\r\n  @if $needs-prefixes {\r\n    -webkit-transition: $webkit;\r\n       -moz-transition: $moz;\r\n            transition: $spec;\r\n  }\r\n  @else {\r\n    @if length($properties) >= 1 {\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    }\r\n\r\n    @else {\r\n      $properties: all 0.15s ease-out 0s;\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin transition-property ($properties...) {\r\n   -webkit-transition-property: transition-property-names($properties, 'webkit');\r\n      -moz-transition-property: transition-property-names($properties, 'moz');\r\n           transition-property: transition-property-names($properties, false);\r\n}\r\n\r\n@mixin transition-duration ($times...) {\r\n  @include prefixer(transition-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin transition-timing-function ($motions...) {\r\n// ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\r\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin transition-delay ($times...) {\r\n  @include prefixer(transition-delay, $times, webkit moz spec);\r\n}\r\n","@mixin user-select($arg: none) {\r\n  @include prefixer(user-select, $arg, webkit moz ms spec);\r\n}\r\n","@mixin placeholder {\r\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\r\n  @each $placeholder in $placeholders {\r\n    &:#{$placeholder}-placeholder {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\r\n\r\n  @if type-of($style) == string and type-of($base-color) == color {\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == string and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: #4294f0;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == color {\r\n    $base-color: $style;\r\n    $style: simple;\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: $style;\r\n    $style: simple;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == number {\r\n    $padding: $base-color;\r\n    $text-size: $style;\r\n    $base-color: #4294f0;\r\n    $style: simple;\r\n\r\n    @if $padding == #4294f0 {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n\r\n\r\n// Selector Style Button\r\n//************************************************************************//\r\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\r\n  // Grayscale button\r\n  @if $type == simple and $b-color == grayscale($b-color) {\r\n    @include simple($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == shiny and $b-color == grayscale($b-color) {\r\n    @include shiny($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == pill and $b-color == grayscale($b-color) {\r\n    @include pill($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == flat and $b-color == grayscale($b-color) {\r\n    @include flat($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  // Colored button\r\n  @if $type == simple {\r\n    @include simple($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == shiny {\r\n    @include shiny($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == pill {\r\n    @include pill($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == flat {\r\n    @include flat($b-color, false, $t-size, $pad);\r\n  }\r\n}\r\n\r\n\r\n// Simple Button\r\n//************************************************************************//\r\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\r\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\r\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\r\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border;\r\n  border-radius: 3px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  text-shadow: 0 1px 0 $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\r\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n    }\r\n\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\r\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\r\n\r\n    @if $grayscale == true {\r\n      $border-active:       grayscale($border-active);\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    border: 1px solid $border-active;\r\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\r\n  }\r\n}\r\n\r\n\r\n// Shiny Button\r\n//************************************************************************//\r\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\r\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\r\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\r\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\r\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\r\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\r\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $border-bottom: grayscale($border-bottom);\r\n    $fourth-stop:   grayscale($fourth-stop);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $second-stop:   grayscale($second-stop);\r\n    $text-shadow:   grayscale($text-shadow);\r\n    $third-stop:    grayscale($third-stop);\r\n  }\r\n\r\n  border: 1px solid $border;\r\n  border-bottom: 1px solid $border-bottom;\r\n  border-radius: 5px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n\r\n  &:hover:not(:disabled) {\r\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\r\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\r\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\r\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\r\n\r\n    @if $grayscale == true {\r\n      $first-stop-hover:  grayscale($first-stop-hover);\r\n      $second-stop-hover: grayscale($second-stop-hover);\r\n      $third-stop-hover:  grayscale($third-stop-hover);\r\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\r\n    }\r\n\r\n    cursor: pointer;\r\n    @include linear-gradient(top, $first-stop-hover  0%,\r\n                                  $second-stop-hover 50%,\r\n                                  $third-stop-hover  50%,\r\n                                  $fourth-stop-hover 100%);\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\r\n\r\n    @if $grayscale == true {\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\r\n  }\r\n}\r\n\r\n\r\n// Pill Button\r\n//************************************************************************//\r\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\r\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\r\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\r\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\r\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\r\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border-bottom: grayscale($border-bottom);\r\n    $border-sides:  grayscale($border-sides);\r\n    $border-top:    grayscale($border-top);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border-top;\r\n  border-color: $border-top $border-sides $border-bottom;\r\n  border-radius: 16px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: normal;\r\n  line-height: 1;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\r\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\r\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\r\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\r\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\r\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\r\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $border-bottom:       grayscale($border-bottom);\r\n      $border-sides:        grayscale($border-sides);\r\n      $border-top:          grayscale($border-top);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n      $text-shadow-hover:   grayscale($text-shadow-hover);\r\n    }\r\n\r\n    border: 1px solid $border-top;\r\n    border-color: $border-top $border-sides $border-bottom;\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n    text-shadow: 0 -1px 1px $text-shadow-hover;\r\n    background-clip: padding-box;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\r\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\r\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\r\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\r\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\r\n\r\n    @if $grayscale == true {\r\n      $active-color:         grayscale($active-color);\r\n      $border-active:        grayscale($border-active);\r\n      $border-bottom-active: grayscale($border-bottom-active);\r\n      $inset-shadow-active:  grayscale($inset-shadow-active);\r\n      $text-shadow-active:   grayscale($text-shadow-active);\r\n    }\r\n\r\n    background: $active-color;\r\n    border: 1px solid $border-active;\r\n    border-bottom: 1px solid $border-bottom-active;\r\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\r\n    text-shadow: 0 -1px 1px $text-shadow-active;\r\n  }\r\n}\r\n\r\n\r\n\r\n// Flat Button\r\n//************************************************************************//\r\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n  }\r\n\r\n  background-color: $base-color;\r\n  border-radius: 3px;\r\n  border: none;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: inherit;\r\n  font-weight: bold;\r\n  padding: 7px 18px;\r\n  text-decoration: none;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled){\r\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover: grayscale($base-color-hover);\r\n    }\r\n\r\n    background-color: $base-color-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-active: grayscale($base-color-active);\r\n    }\r\n\r\n    background-color: $base-color-active;\r\n    cursor: pointer;\r\n  }\r\n}\r\n","// Modern micro clearfix provides an easy way to contain floats without adding additional markup.\r\n//\r\n// Example usage:\r\n//\r\n//    // Contain all floats within .wrapper\r\n//    .wrapper {\r\n//      @include clearfix;\r\n//      .content,\r\n//      .sidebar {\r\n//        float : left;\r\n//      }\r\n//    }\r\n\r\n@mixin clearfix {\r\n  &:after {\r\n    content:\"\";\r\n    display:table;\r\n    clear:both;\r\n  }\r\n}\r\n\r\n// Acknowledgements\r\n// Beat *that* clearfix: [Thierry Koblentz](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php)\r\n","// directional-property mixins are shorthands\r\n// for writing properties like the following\r\n//\r\n// @include margin(null 0 10px);\r\n// ------\r\n// margin-right: 0;\r\n// margin-bottom: 10px;\r\n// margin-left: 0;\r\n//\r\n// - or -\r\n//\r\n// @include border-style(dotted null);\r\n// ------\r\n// border-top-style: dotted;\r\n// border-bottom-style: dotted;\r\n//\r\n// ------\r\n//\r\n// Note: You can also use false instead of null\r\n\r\n@function collapse-directionals($vals) {\r\n  $output: null;\r\n\r\n  $A: nth( $vals, 1 );\r\n  $B: if( length($vals) < 2, $A, nth($vals, 2));\r\n  $C: if( length($vals) < 3, $A, nth($vals, 3));\r\n  $D: if( length($vals) < 2, $A, nth($vals, if( length($vals) < 4, 2, 4) ));\r\n\r\n  @if $A == 0 { $A: 0 }\r\n  @if $B == 0 { $B: 0 }\r\n  @if $C == 0 { $C: 0 }\r\n  @if $D == 0 { $D: 0 }\r\n\r\n  @if $A == $B and $A == $C and $A == $D { $output: $A          }\r\n  @else if $A == $C and $B == $D         { $output: $A $B       }\r\n  @else if $B == $D                      { $output: $A $B $C    }\r\n  @else                                  { $output: $A $B $C $D }\r\n\r\n  @return $output;\r\n}\r\n\r\n@function contains-falsy($list) {\r\n  @each $item in $list {\r\n    @if not $item {\r\n      @return true;\r\n    }\r\n  }\r\n\r\n  @return false;\r\n}\r\n\r\n@mixin directional-property($pre, $suf, $vals) {\r\n  // Property Names\r\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\r\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\r\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\r\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\r\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\r\n\r\n  $vals: collapse-directionals($vals);\r\n\r\n  @if contains-falsy($vals) {\r\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\r\n\r\n    @if length($vals) == 1 {\r\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\r\n    } @else {\r\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\r\n    }\r\n\r\n    // prop: top/bottom right/left\r\n    @if length($vals) == 2 {\r\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n\r\n    // prop: top right/left bottom\r\n    } @else if length($vals) == 3 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n\r\n    // prop: top right bottom left\r\n    } @else if length($vals) == 4 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\r\n    }\r\n\r\n  // prop: top/right/bottom/left\r\n  } @else {\r\n    #{$all}: $vals;\r\n  }\r\n}\r\n\r\n@mixin margin($vals...) {\r\n  @include directional-property(margin, false, $vals...);\r\n}\r\n\r\n@mixin padding($vals...) {\r\n  @include directional-property(padding, false, $vals...);\r\n}\r\n\r\n@mixin border-style($vals...) {\r\n  @include directional-property(border, style, $vals...);\r\n}\r\n\r\n@mixin border-color($vals...) {\r\n  @include directional-property(border, color, $vals...);\r\n}\r\n\r\n@mixin border-width($vals...) {\r\n  @include directional-property(border, width, $vals...);\r\n}\r\n","@mixin ellipsis($width: 100%) {\r\n  display: inline-block;\r\n  max-width: $width;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n","$georgia: Georgia, Cambria, \"Times New Roman\", Times, serif;\r\n$helvetica: \"Helvetica Neue\", Helvetica, Roboto, Arial, sans-serif;\r\n$lucida-grande: \"Lucida Grande\", Tahoma, Verdana, Arial, sans-serif;\r\n$monospace: \"Bitstream Vera Sans Mono\", Consolas, Courier, monospace;\r\n$verdana: Verdana, Geneva, sans-serif;\r\n","@mixin hide-text {\r\n  overflow: hidden;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 0;\r\n    height: 100%;\r\n  }\r\n}\r\n","//************************************************************************//\r\n// Generate a variable ($all-text-inputs) with a list of all html5\r\n// input types that have a text-based input, excluding textarea.\r\n// http://diveintohtml5.org/forms.html\r\n//************************************************************************//\r\n$inputs-list: 'input[type=\"email\"]',\r\n              'input[type=\"number\"]',\r\n              'input[type=\"password\"]',\r\n              'input[type=\"search\"]',\r\n              'input[type=\"tel\"]',\r\n              'input[type=\"text\"]',\r\n              'input[type=\"url\"]',\r\n\r\n              // Webkit & Gecko may change the display of these in the future\r\n              'input[type=\"color\"]',\r\n              'input[type=\"date\"]',\r\n              'input[type=\"datetime\"]',\r\n              'input[type=\"datetime-local\"]',\r\n              'input[type=\"month\"]',\r\n              'input[type=\"time\"]',\r\n              'input[type=\"week\"]';\r\n\r\n// Bare inputs\r\n//************************************************************************//\r\n$all-text-inputs: assign-inputs($inputs-list);\r\n\r\n// Hover Pseudo-class\r\n//************************************************************************//\r\n$all-text-inputs-hover: assign-inputs($inputs-list, hover);\r\n\r\n// Focus Pseudo-class\r\n//************************************************************************//\r\n$all-text-inputs-focus: assign-inputs($inputs-list, focus);\r\n\r\n\r\n\r\n// You must use interpolation on the variable:\r\n// #{$all-text-inputs}\r\n// #{$all-text-inputs-hover}\r\n// #{$all-text-inputs-focus}\r\n\r\n// Example\r\n//************************************************************************//\r\n//   #{$all-text-inputs}, textarea {\r\n//     border: 1px solid red;\r\n//   }\r\n\r\n\r\n\r\n//************************************************************************//\r\n// Generate a variable ($all-button-inputs) with a list of all html5\r\n// input types that have a button-based input, excluding button.\r\n//************************************************************************//\r\n$inputs-button-list: 'input[type=\"button\"]',\r\n                     'input[type=\"reset\"]',\r\n                     'input[type=\"submit\"]';\r\n\r\n// Bare inputs\r\n//************************************************************************//\r\n$all-button-inputs: assign-inputs($inputs-button-list);\r\n\r\n// Hover Pseudo-class\r\n//************************************************************************//\r\n$all-button-inputs-hover: assign-inputs($inputs-button-list, hover);\r\n\r\n// Focus Pseudo-class\r\n//************************************************************************//\r\n$all-button-inputs-focus: assign-inputs($inputs-button-list, focus);\r\n\r\n// Active Pseudo-class\r\n//************************************************************************//\r\n$all-button-inputs-active: assign-inputs($inputs-button-list, active);\r\n\r\n\r\n\r\n// You must use interpolation on the variable:\r\n// #{$all-button-inputs}\r\n// #{$all-button-inputs-hover}\r\n// #{$all-button-inputs-focus}\r\n// #{$all-button-inputs-active}\r\n\r\n// Example\r\n//************************************************************************//\r\n//   #{$all-button-inputs}, button {\r\n//     border: 1px solid red;\r\n//   }\r\n","@mixin position ($position: relative, $coordinates: null null null null) {\r\n\r\n  @if type-of($position) == list {\r\n    $coordinates: $position;\r\n    $position: relative;\r\n  }\r\n\r\n  $coordinates: unpack($coordinates);\r\n\r\n  $top: nth($coordinates, 1);\r\n  $right: nth($coordinates, 2);\r\n  $bottom: nth($coordinates, 3);\r\n  $left: nth($coordinates, 4);\r\n\r\n  position: $position;\r\n\r\n  @if ($top and $top == auto) or (type-of($top) == number) {\r\n    top: $top;\r\n  }\r\n\r\n  @if ($right and $right == auto) or (type-of($right) == number) {\r\n    right: $right;\r\n  }\r\n\r\n  @if ($bottom and $bottom == auto) or (type-of($bottom) == number) {\r\n    bottom: $bottom;\r\n  }\r\n\r\n  @if ($left and $left == auto) or (type-of($left) == number) {\r\n    left: $left;\r\n  }\r\n}\r\n","//************************************************************************//\r\n// Example: @include prefixer(border-radius, $radii, webkit ms spec);\r\n//************************************************************************//\r\n// Variables located in /settings/_prefixer.scss\r\n\r\n@mixin prefixer ($property, $value, $prefixes) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit {\r\n      @if $prefix-for-webkit {\r\n        -webkit-#{$property}: $value;\r\n      }\r\n    }\r\n    @else if $prefix == moz {\r\n      @if $prefix-for-mozilla {\r\n        -moz-#{$property}: $value;\r\n      }\r\n    }\r\n    @else if $prefix == ms {\r\n      @if $prefix-for-microsoft {\r\n        -ms-#{$property}: $value;\r\n      }\r\n    }\r\n    @else if $prefix == o {\r\n      @if $prefix-for-opera {\r\n        -o-#{$property}: $value;\r\n      }\r\n    }\r\n    @else if $prefix == spec {\r\n      @if $prefix-for-spec {\r\n        #{$property}: $value;\r\n      }\r\n    }\r\n    @else  {\r\n      @warn \"Unrecognized prefix: #{$prefix}\";\r\n    }\r\n  }\r\n}\r\n\r\n@mixin disable-prefix-for-all() {\r\n  $prefix-for-webkit:    false !global;\r\n  $prefix-for-mozilla:   false !global;\r\n  $prefix-for-microsoft: false !global;\r\n  $prefix-for-opera:     false !global;\r\n  $prefix-for-spec:      false !global;\r\n}\r\n","@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\r\n  @if $asset-pipeline {\r\n    background-image: image-url(\"#{$filename}.#{$extension}\");\r\n  }\r\n  @else {\r\n    background-image:       url(\"#{$filename}.#{$extension}\");\r\n  }\r\n\r\n  @include hidpi {\r\n    @if $asset-pipeline {\r\n      @if $retina-filename {\r\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\r\n      }\r\n      @else {\r\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    }\r\n\r\n    @else {\r\n      @if $retina-filename {\r\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\r\n      }\r\n      @else {\r\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    }\r\n\r\n    background-size: $background-size;\r\n\r\n  }\r\n}\r\n","@mixin size($size) {\r\n  $height: nth($size, 1);\r\n  $width: $height;\r\n\r\n  @if length($size) > 1 {\r\n    $height: nth($size, 2);\r\n  }\r\n\r\n  @if $height == auto or (type-of($height) == number and not unitless($height)) {\r\n    height: $height;\r\n  }\r\n\r\n  @if $width == auto or (type-of($width) == number and not unitless($width)) {\r\n    width: $width;\r\n  }\r\n}\r\n","// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\r\n// Timing functions are the same as demo'ed here: http://jqueryui.com/resources/demos/effect/easing.html\r\n\r\n// EASE IN\r\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\r\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\r\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\r\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\r\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\r\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\r\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\r\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\r\n\r\n// EASE OUT\r\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\r\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\r\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\r\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\r\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\r\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\r\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\r\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\r\n\r\n// EASE IN OUT\r\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\r\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\r\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\r\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\r\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\r\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\r\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\r\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\r\n","@mixin triangle ($size, $color, $direction) {\r\n  height: 0;\r\n  width: 0;\r\n\r\n  $width: nth($size, 1);\r\n  $height: nth($size, length($size));\r\n\r\n  $foreground-color: nth($color, 1);\r\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\r\n\r\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\r\n\r\n    $width: $width / 2;\r\n    $height: if(length($size) > 1, $height, $height/2);\r\n\r\n    @if $direction == up {\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n      border-bottom: $height solid $foreground-color;\r\n\r\n    } @else if $direction == right {\r\n      border-top: $width solid $background-color;\r\n      border-bottom: $width solid $background-color;\r\n      border-left: $height solid $foreground-color;\r\n\r\n    } @else if $direction == down {\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n      border-top: $height solid $foreground-color;\r\n\r\n    } @else if $direction == left {\r\n      border-top: $width solid $background-color;\r\n      border-bottom: $width solid $background-color;\r\n      border-right: $height solid $foreground-color;\r\n    }\r\n  }\r\n\r\n  @else if ($direction == up-right) or ($direction == up-left) {\r\n    border-top: $height solid $foreground-color;\r\n\r\n    @if $direction == up-right {\r\n      border-left:  $width solid $background-color;\r\n\r\n    } @else if $direction == up-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  }\r\n\r\n  @else if ($direction == down-right) or ($direction == down-left) {\r\n    border-bottom: $height solid $foreground-color;\r\n\r\n    @if $direction == down-right {\r\n      border-left:  $width solid $background-color;\r\n\r\n    } @else if $direction == down-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  }\r\n\r\n  @else if ($direction == inset-up) {\r\n    border-width: $height $width;\r\n    border-style: solid;\r\n    border-color: $background-color $background-color $foreground-color;\r\n  }\r\n\r\n  @else if ($direction == inset-down) {\r\n    border-width: $height $width;\r\n    border-style: solid;\r\n    border-color: $foreground-color $background-color $background-color;\r\n  }\r\n\r\n  @else if ($direction == inset-right) {\r\n    border-width: $width $height;\r\n    border-style: solid;\r\n    border-color: $background-color $background-color $background-color $foreground-color;\r\n  }\r\n\r\n  @else if ($direction == inset-left) {\r\n    border-width: $width $height;\r\n    border-style: solid;\r\n    border-color: $background-color $foreground-color $background-color $background-color;\r\n  }\r\n}\r\n","@mixin word-wrap($wrap: break-word) {\r\n  word-wrap: $wrap;\r\n\r\n  @if $wrap == break-word {\r\n    overflow-wrap: break-word;\r\n    word-break: break-all;\r\n  }\r\n}\r\n","//************************************************************************//\r\n// These mixins/functions are deprecated\r\n// They will be removed in the next MAJOR version release\r\n//************************************************************************//\r\n@mixin inline-block {\r\n  display: inline-block;\r\n  @warn \"inline-block mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n","/* Neat 1.7.0\r\n * http://neat.bourbon.io\r\n * Copyright 2012-2014 thoughtbot, inc.\r\n * MIT License */\r\n\r\n// Helpers\r\n@import \"neat-helpers\";\r\n\r\n// Grid\r\n@import \"grid/private\";\r\n@import \"grid/box-sizing\";\r\n@import \"grid/omega\";\r\n@import \"grid/outer-container\";\r\n@import \"grid/span-columns\";\r\n@import \"grid/row\";\r\n@import \"grid/shift\";\r\n@import \"grid/pad\";\r\n@import \"grid/fill-parent\";\r\n@import \"grid/media\";\r\n@import \"grid/to-deprecate\";\r\n@import \"grid/visual-grid\";\r\n@import \"grid/display-context\";\r\n@import \"grid/direction-context\";\r\n","// Functions\r\n@import \"functions/private\";\r\n@import \"functions/new-breakpoint\";\r\n\r\n// Settings\r\n@import \"settings/grid\";\r\n@import \"settings/visual-grid\";\r\n@import \"settings/disable-warnings\";\r\n","// Checks if a number is even\r\n@function is-even($int) {\r\n  @return $int % 2 == 0\r\n}\r\n\r\n// Checks if an element belongs to a list or not\r\n@function belongs-to($tested-item, $list) {\r\n  @return not not-belongs-to($tested-item, $list);\r\n}\r\n\r\n@function not-belongs-to($tested-item, $list) {\r\n  @return not index($list, $tested-item);\r\n}\r\n\r\n// Contains display value\r\n@function contains-display-value($query) {\r\n  @return belongs-to(table, $query)\r\n       or belongs-to(block, $query)\r\n       or belongs-to(inline-block, $query)\r\n       or belongs-to(inline, $query);\r\n}\r\n\r\n// Parses the first argument of span-columns()\r\n@function container-span($span: $span) {\r\n  @if length($span) == 3 {\r\n    $container-columns: nth($span, 3);\r\n    @return $container-columns;\r\n  } @else if length($span) == 2 {\r\n    $container-columns: nth($span, 2);\r\n    @return $container-columns;\r\n  }\r\n\r\n  @return $grid-columns;\r\n}\r\n\r\n@function container-shift($shift: $shift) {\r\n  $parent-columns: $grid-columns !default !global;\r\n\r\n  @if length($shift) == 3 {\r\n    $container-columns: nth($shift, 3);\r\n    @return $container-columns;\r\n  } @else if length($shift) == 2 {\r\n    $container-columns: nth($shift, 2);\r\n    @return $container-columns;\r\n  }\r\n\r\n  @return $parent-columns;\r\n}\r\n\r\n// Generates a striped background\r\n@function gradient-stops($grid-columns, $color: $visual-grid-color) {\r\n  $transparent: rgba(0,0,0,0);\r\n\r\n  $column-width: flex-grid(1, $grid-columns);\r\n  $gutter-width: flex-gutter($grid-columns);\r\n  $column-offset: $column-width;\r\n\r\n  $values: ($transparent 0, $color 0);\r\n\r\n  @for $i from 1 to $grid-columns*2 {\r\n    @if is-even($i) {\r\n      $values: append($values, $transparent $column-offset, comma);\r\n      $values: append($values, $color $column-offset, comma);\r\n      $column-offset: $column-offset + $column-width;\r\n    } @else {\r\n      $values: append($values, $color $column-offset, comma);\r\n      $values: append($values, $transparent $column-offset, comma);\r\n      $column-offset: $column-offset + $gutter-width;\r\n    }\r\n  }\r\n\r\n  @return $values;\r\n}\r\n\r\n// Layout direction\r\n@function get-direction($layout, $default) {\r\n  $direction: null;\r\n\r\n  @if to-upper-case($layout) == \"LTR\" or to-upper-case($layout) == \"RTL\" {\r\n    $direction: direction-from-layout($layout);\r\n  } @else {\r\n    $direction: direction-from-layout($default);\r\n  }\r\n\r\n  @return $direction;\r\n}\r\n\r\n@function direction-from-layout($layout) {\r\n  $direction: null;\r\n\r\n  @if to-upper-case($layout) == \"LTR\" {\r\n    $direction: right;\r\n  } @else {\r\n    $direction: left;\r\n  }\r\n\r\n  @return $direction;\r\n}\r\n\r\n@function get-opposite-direction($direction) {\r\n  $opposite-direction: left;\r\n\r\n  @if $direction == \"left\" {\r\n    $opposite-direction: right;\r\n  }\r\n\r\n  @return $opposite-direction;\r\n}\r\n","/// Returns a media context (media query / grid context) that can be stored in a variable and passed to `media()` as a single-keyword argument. Media contexts defined using `new-breakpoint` are used by the visual grid, as long as they are defined before importing Neat.\r\n///\r\n/// @param {List} $query\r\n///   A list of media query features and values. Each `$feature` should have a corresponding `$value`.\r\n///\r\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\r\n///\r\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`). For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\r\n///\r\n/// @param {Number (unitless)} $total-columns ($grid-columns)\r\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\r\n///\r\n/// @example scss - Usage\r\n///   $mobile: new-breakpoint(max-width 480px 4);\r\n///\r\n///   .element {\r\n///     @include media($mobile) {\r\n///       @include span-columns(4);\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   @media screen and (max-width: 480px) {\r\n///     .element {\r\n///       display: block;\r\n///       float: left;\r\n///       margin-right: 7.42297%;\r\n///       width: 100%;\r\n///     }\r\n///     .element:last-child {\r\n///       margin-right: 0;\r\n///     }\r\n///   }\r\n\r\n@function new-breakpoint($query: $feature $value $columns, $total-columns: $grid-columns) {\r\n  @if length($query) == 1 {\r\n    $query: $default-feature nth($query, 1) $total-columns;\r\n  }\r\n\r\n  @else if is-even(length($query)) {\r\n    $query: append($query, $total-columns);\r\n  }\r\n\r\n  @if not belongs-to($query, $visual-grid-breakpoints) {\r\n    $visual-grid-breakpoints: append($visual-grid-breakpoints, $query, comma) !global;\r\n  }\r\n\r\n  @return $query;\r\n}\r\n","/// Sets the relative width of a single grid column. The unit used should be the same one used to define `$gutter`. To learn more about golden-ratio() see [Bourbon docs](http://bourbon.io/docs/#golden-ratio). Set with a `!global` flag.\r\n///\r\n/// @type Number (Unit)\r\n\r\n$column: golden-ratio(1em, 3) !default;\r\n\r\n/// Sets the relative width of a single grid gutter. The unit used should be the same one used to define `$column`. To learn more about golden-ratio() see [Bourbon docs](http://bourbon.io/docs/#golden-ratio). Set with the `!global` flag.\r\n///\r\n/// @type Number (Unit)\r\n\r\n$gutter: golden-ratio(1em, 1) !default;\r\n\r\n/// Sets the total number of columns in the grid. Its value can be overridden inside a media query using the `media()` mixin. Set with the `!global` flag.\r\n///\r\n/// @type Number (Unitless)\r\n\r\n$grid-columns: 12 !default;\r\n\r\n/// Sets the max-width property of the element that includes `outer-container()`. To learn more about `em()` see [Bourbon docs](http://bourbon.io/docs/#px-to-em). Set with the `!global` flag.\r\n///\r\n/// @type Number (Unit)\r\n///\r\n$max-width: em(1088) !default;\r\n\r\n/// When set to true, it sets the box-sizing property of all elements to `border-box`. Set with a `!global` flag.\r\n///\r\n/// @type Bool\r\n///\r\n/// @example css - CSS Output\r\n///   html {\r\n///     -webkit-box-sizing: border-box;\r\n///     -moz-box-sizing: border-box;\r\n///     box-sizing: border-box; }\r\n///\r\n///   *, *:before, *:after {\r\n///     -webkit-box-sizing: inherit;\r\n///     -moz-box-sizing: inherit;\r\n///     box-sizing: inherit;\r\n///   }\r\n\r\n$border-box-sizing: true !default;\r\n\r\n/// Sets the default [media feature](http://www.w3.org/TR/css3-mediaqueries/#media) that `media()` and `new-breakpoint()` revert to when only a breakpoint value is passed. Set with a `!global` flag.\r\n///\r\n/// @type String\r\n\r\n$default-feature: min-width; // Default @media feature for the breakpoint() mixin\r\n\r\n///Sets the default layout direction of the grid. Can be `LTR` or `RTL`. Set with a `!global` flag.\r\n///\r\n///@type String\r\n\r\n$default-layout-direction: LTR !default;\r\n","/// Displays the visual grid when set to true. The overlaid grid may be few pixels off depending on the browser's rendering engine and pixel rounding algorithm. Set with the `!global` flag.\r\n///\r\n/// @type Bool\r\n\r\n$visual-grid: false !default;\r\n\r\n/// Sets the visual grid color. Set with `!global` flag.\r\n///\r\n/// @type Color\r\n\r\n$visual-grid-color: #EEE !default;\r\n\r\n/// Sets the `z-index` property of the visual grid. Can be `back` (behind content) or `front` (in front of content). Set with `!global` flag.\r\n///\r\n/// @type String\r\n\r\n$visual-grid-index: back !default;\r\n\r\n/// Sets the opacity property of the visual grid. Set with `!global` flag.\r\n///\r\n/// @type Number (unitless)\r\n\r\n$visual-grid-opacity: 0.4 !default;\r\n\r\n$visual-grid-breakpoints: () !default;\r\n","/// Disable all deprecation warnings. Defaults to `false`. Set with a `!global` flag.\r\n///\r\n/// @type Bool\r\n\r\n$disable-warnings: false !default;\r\n\r\n@mixin -neat-warn($message) {\r\n  @if $disable-warnings == false {\r\n    @warn \"#{$message}\";\r\n  }\r\n}\r\n","$parent-columns: $grid-columns !default;\r\n$fg-column: $column;\r\n$fg-gutter: $gutter;\r\n$fg-max-columns: $grid-columns;\r\n$container-display-table: false !default;\r\n$layout-direction: LTR !default;\r\n\r\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\r\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($width / $container-width);\r\n}\r\n\r\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($gutter / $container-width);\r\n}\r\n\r\n@function grid-width($n) {\r\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\r\n}\r\n\r\n@function get-parent-columns($columns) {\r\n  @if $columns != $grid-columns {\r\n    $parent-columns: $columns !global;\r\n  } @else {\r\n    $parent-columns: $grid-columns !global;\r\n  }\r\n\r\n  @return $parent-columns;\r\n}\r\n\r\n@function is-display-table($container-is-display-table, $display) {\r\n  @return $container-is-display-table == true or $display == table;\r\n}\r\n","@if $border-box-sizing == true {\r\n  html { // http://bit.ly/1qk2tVR\r\n    @include box-sizing(border-box);\r\n  }\r\n\r\n  * {\r\n    &, &:before, &:after {\r\n      @include box-sizing(inherit);\r\n    }\r\n  }\r\n}\r\n","/// Removes the element's gutter margin, regardless of its position in the grid hierarchy or display property. It can target a specific element, or every `nth-child` occurrence. Works only with `block` layouts.\r\n///\r\n/// @param {List} $query (block)\r\n///   List of arguments. Supported arguments are `nth-child` selectors (targets a specific pseudo element) and `auto` (targets `last-child`).\r\n///\r\n///   When passed an `nth-child` argument of type `*n` with `block` display, the omega mixin automatically adds a clear to the `*n+1` th element. Note that composite arguments such as `2n+1` do not support this feature.\r\n///\r\n///   **Deprecation warning**: The omega mixin will no longer take a `$direction` argument. To change the layout direction, use `row($direction)` or set `$default-layout-direction` instead.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include omega;\r\n///   }\r\n///\r\n///   .nth-element {\r\n///     @include omega(4n);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin-right: 0;\r\n///   }\r\n///\r\n///   .nth-element:nth-child(4n) {\r\n///     margin-right: 0;\r\n///   }\r\n///\r\n///   .nth-element:nth-child(4n+1) {\r\n///     clear: left;\r\n///   }\r\n\r\n@mixin omega($query: block, $direction: default) {\r\n  $table: belongs-to(table, $query);\r\n  $auto: belongs-to(auto, $query);\r\n\r\n  @if $direction != default {\r\n    @include -neat-warn(\"The omega mixin will no longer take a $direction argument. To change the layout direction, use the direction(){...} mixin.\");\r\n  } @else {\r\n    $direction: get-direction($layout-direction, $default-layout-direction);\r\n  }\r\n\r\n  @if $table {\r\n    @include -neat-warn(\"The omega mixin no longer removes padding in table layouts.\");\r\n  }\r\n\r\n  @if length($query) == 1 {\r\n    @if $auto {\r\n      &:last-child {\r\n        margin-#{$direction}: 0;\r\n      }\r\n    }\r\n\r\n    @else if contains-display-value($query) and $table == false {\r\n      margin-#{$direction}: 0;\r\n    }\r\n\r\n    @else {\r\n      @include nth-child($query, $direction);\r\n    }\r\n  }\r\n\r\n  @else if length($query) == 2 {\r\n    @if $auto {\r\n      &:last-child {\r\n        margin-#{$direction}: 0;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      @include nth-child(nth($query, 1), $direction);\r\n    }\r\n  }\r\n\r\n  @else {\r\n    @include -neat-warn(\"Too many arguments passed to the omega() mixin.\");\r\n  }\r\n}\r\n\r\n@mixin nth-child($query, $direction) {\r\n  $opposite-direction: get-opposite-direction($direction);\r\n\r\n  &:nth-child(#{$query}) {\r\n    margin-#{$direction}: 0;\r\n  }\r\n\r\n  @if type-of($query) == number {\r\n    &:nth-child(#{$query}+1) {\r\n      clear: $opposite-direction;\r\n    }\r\n  }\r\n}\r\n","/// Makes an element a outer container by centring it in the viewport, clearing its floats, and setting its `max-width`.\r\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\r\n///\r\n/// @param {Number (unit)} $local-max-width ($max-width)\r\n///   Max width to be applied to the element. Can be a percentage or a measure.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include outer-container(100%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     *zoom: 1;\r\n///     max-width: 100%;\r\n///     margin-left: auto;\r\n///     margin-right: auto;\r\n///   }\r\n///\r\n///   .element:before, .element:after {\r\n///     content: \" \";\r\n///     display: table;\r\n///   }\r\n///\r\n///   .element:after {\r\n///     clear: both;\r\n///   }\r\n\r\n@mixin outer-container($local-max-width: $max-width) {\r\n  @include clearfix;\r\n  max-width: $local-max-width;\r\n  margin: {\r\n    left: auto;\r\n    right: auto;\r\n  }\r\n}\r\n","/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\r\n///\r\n/// @param {List} $span\r\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\r\n///\r\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\r\n///\r\n///   The values can be separated with any string such as `of`, `/`, etc.\r\n///\r\n/// @param {String} $display (block)\r\n///   Sets the display property of the element. By default it sets the display propert of the element to `block`.\r\n///\r\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\r\n///\r\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include span-columns(6);\r\n///\r\n///    .nested-element {\r\n///      @include span-columns(2 of 6);\r\n///    }\r\n///  }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     display: block;\r\n///     float: left;\r\n///     margin-right: 2.35765%;\r\n///     width: 48.82117%;\r\n///   }\r\n///\r\n///   .element:last-child {\r\n///     margin-right: 0;\r\n///   }\r\n///\r\n///   .element .nested-element {\r\n///     display: block;\r\n///     float: left;\r\n///     margin-right: 4.82916%;\r\n///     width: 30.11389%;\r\n///   }\r\n///\r\n///   .element .nested-element:last-child {\r\n///     margin-right: 0;\r\n///   }\r\n\r\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\r\n  $columns: nth($span, 1);\r\n  $container-columns: container-span($span);\r\n\r\n  $parent-columns: get-parent-columns($container-columns) !global;\r\n\r\n  $direction: get-direction($layout-direction, $default-layout-direction);\r\n  $opposite-direction: get-opposite-direction($direction);\r\n\r\n  $display-table: is-display-table($container-display-table, $display);\r\n\r\n  @if $display-table  {\r\n    display: table-cell;\r\n    width: percentage($columns / $container-columns);\r\n  } @else {\r\n    float: #{$opposite-direction};\r\n\r\n    @if $display != no-display {\r\n      display: block;\r\n    }\r\n\r\n    @if $display == collapse {\r\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\r\n    }\r\n\r\n    @if $display == collapse or $display == block-collapse {\r\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\r\n\r\n      &:last-child {\r\n        width: flex-grid($columns, $container-columns);\r\n      }\r\n\r\n    } @else {\r\n      margin-#{$direction}: flex-gutter($container-columns);\r\n      width: flex-grid($columns, $container-columns);\r\n\r\n      &:last-child {\r\n        margin-#{$direction}: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/// Designates the element as a row of columns in the grid layout. It clears the floats on the element and sets its display property. Rows can't be nested, but there can be more than one row element—with different display properties—per layout.\r\n///\r\n/// @param {String} $display (default)\r\n///  Sets the display property of the element and the display context that will be used by its children. Can be `block` or `table`.\r\n///\r\n/// @param {String} $direction ($default-layout-direction)\r\n///  Sets the layout direction. Can be `LTR` (left-to-right) or `RTL` (right-to-left).\r\n///\r\n/// @example scss - Usage\r\n///  .element {\r\n///    @include row();\r\n///  }\r\n///\r\n/// @example css - CSS Output\r\n///  .element {\r\n///    *zoom: 1;\r\n///    display: block;\r\n///  }\r\n///\r\n/// .element:before, .element:after {\r\n///   content: \" \";\r\n///   display: table;\r\n/// }\r\n///\r\n/// .element:after {\r\n///   clear: both;\r\n/// }\r\n\r\n@mixin row($display: default, $direction: $default-layout-direction) {\r\n  @if $direction != $default-layout-direction {\r\n    @include -neat-warn(\"The $direction argument will be deprecated in future versions in favor of the direction(){...} mixin.\");\r\n  }\r\n\r\n  $layout-direction: $direction !global;\r\n\r\n  @if $display != default {\r\n    @include -neat-warn(\"The $display argument will be deprecated in future versions in favor of the display(){...} mixin.\");\r\n  }\r\n\r\n  @if $display == table {\r\n    display: table;\r\n    @include fill-parent;\r\n    table-layout: fixed;\r\n    $container-display-table: true !global;\r\n  }\r\n\r\n  @else {\r\n    @include clearfix;\r\n    display: block;\r\n    $container-display-table: false !global;\r\n  }\r\n}\r\n\r\n","/// Translates an element horizontally by a number of columns. Positive arguments shift the element to the active layout direction, while negative ones shift it to the opposite direction.\r\n///\r\n/// @param {Number (unitless)} $n-columns (1)\r\n///   Number of columns by which the element shifts.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include shift(-3);\r\n///   }\r\n///\r\n/// @example css - CSS output\r\n///   .element {\r\n///     margin-left: -25.58941%;\r\n///   }\r\n\r\n@mixin shift($n-columns: 1) {\r\n  @include shift-in-context($n-columns);\r\n}\r\n\r\n/// Translates an element horizontally by a number of columns, in a specific nesting context.\r\n///\r\n/// @param {List} $shift\r\n///   A list containing the number of columns to shift (`$columns`) and the number of columns of the parent element (`$container-columns`).\r\n///\r\n///   The two values can be separated with any string such as `of`, `/`, etc.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include shift(-3 of 6);\r\n///   }\r\n///\r\n/// @example css - CSS output\r\n///   .element {\r\n///     margin-left: -52.41458%;\r\n///   }\r\n\r\n@mixin shift-in-context($shift: $columns of $container-columns) {\r\n  $n-columns: nth($shift, 1);\r\n  $parent-columns: container-shift($shift) !global;\r\n\r\n  $direction: get-direction($layout-direction, $default-layout-direction);\r\n  $opposite-direction: get-opposite-direction($direction);\r\n\r\n  margin-#{$opposite-direction}: $n-columns * flex-grid(1, $parent-columns) + $n-columns * flex-gutter($parent-columns);\r\n\r\n  // Reset nesting context\r\n  $parent-columns: $grid-columns !global;\r\n}\r\n","/// Adds padding to the element.\r\n///\r\n/// @param {List} $padding (flex-gutter())\r\n///   A list of padding value(s) to use. Passing `default` in the list will result in using the gutter width as a padding value.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include pad(30px -20px 10px default);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     padding: 30px -20px 10px 2.35765%;\r\n///   }\r\n\r\n@mixin pad($padding: flex-gutter()) {\r\n  $padding-list: null;\r\n  @each $value in $padding {\r\n    $value: if($value == 'default', flex-gutter(), $value);\r\n    $padding-list: join($padding-list, $value);\r\n  }\r\n  padding: $padding-list;\r\n}\r\n","/// Forces the element to fill its parent container.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include fill-parent;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     width: 100%;\r\n///     -webkit-box-sizing: border-box;\r\n///     -moz-box-sizing: border-box;\r\n///     box-sizing: border-box;\r\n///   }\r\n\r\n@mixin fill-parent() {\r\n  width: 100%;\r\n\r\n  @if $border-box-sizing == false {\r\n    @include box-sizing(border-box);\r\n  }\r\n}\r\n","/// Outputs a media-query block with an optional grid context (the total number of columns used in the grid).\r\n///\r\n/// @param {List} $query\r\n///   A list of media query features and values, where each `$feature` should have a corresponding `$value`.\r\n///   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\r\n///\r\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\r\n///\r\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).\r\n///\r\n///\r\n/// @param {Number (unitless)} $total-columns ($grid-columns)\r\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\r\n///\r\n/// @example scss - Usage\r\n///   .responsive-element {\r\n///      @include media(769px) {\r\n///        @include span-columns(6);\r\n///      }\r\n///   }\r\n///\r\n///  .new-context-element {\r\n///    @include media(min-width 320px max-width 480px, 6) {\r\n///      @include span-columns(6);\r\n///    }\r\n///  }\r\n///\r\n/// @example css - CSS Output\r\n///  @media screen and (min-width: 769px) {\r\n///    .responsive-element {\r\n///      display: block;\r\n///      float: left;\r\n///      margin-right: 2.35765%;\r\n///      width: 48.82117%;\r\n///    }\r\n///\r\n///    .responsive-element:last-child {\r\n///      margin-right: 0;\r\n///    }\r\n///  }\r\n///\r\n///  @media screen and (min-width: 320px) and (max-width: 480px) {\r\n///    .new-context-element {\r\n///      display: block;\r\n///      float: left;\r\n///      margin-right: 4.82916%;\r\n///      width: 100%;\r\n///    }\r\n///\r\n///    .new-context-element:last-child {\r\n///      margin-right: 0;\r\n///    }\r\n///  }\r\n\r\n@mixin media($query: $feature $value $columns, $total-columns: $grid-columns) {\r\n  @if length($query) == 1 {\r\n    @media screen and ($default-feature: nth($query, 1)) {\r\n      $default-grid-columns: $grid-columns;\r\n      $grid-columns: $total-columns !global;\r\n      @content;\r\n      $grid-columns: $default-grid-columns !global;\r\n    }\r\n  }\r\n\r\n  @else {\r\n    $loop-to: length($query);\r\n    $media-query: 'screen and ';\r\n    $default-grid-columns: $grid-columns;\r\n    $grid-columns: $total-columns !global;\r\n\r\n    @if not is-even(length($query)) {\r\n      $grid-columns: nth($query, $loop-to) !global;\r\n      $loop-to: $loop-to - 1;\r\n    }\r\n\r\n    $i: 1;\r\n    @while $i <= $loop-to {\r\n      $media-query: $media-query + '(' + nth($query, $i) + ': ' + nth($query, $i + 1) + ') ';\r\n\r\n      @if ($i + 1) != $loop-to {\r\n        $media-query: $media-query + 'and ';\r\n      }\r\n\r\n      $i: $i + 2;\r\n    }\r\n\r\n    @media #{$media-query} {\r\n      @content;\r\n      $grid-columns: $default-grid-columns !global;\r\n    }\r\n  }\r\n}\r\n","@mixin breakpoint($query:$feature $value $columns, $total-columns: $grid-columns) {\r\n  @include -neat-warn(\"The breakpoint() mixin was renamed to media() in Neat 1.0. Please update your project with the new syntax before the next version bump.\");\r\n\r\n  @if length($query) == 1 {\r\n    @media screen and ($default-feature: nth($query, 1)) {\r\n      $default-grid-columns: $grid-columns;\r\n      $grid-columns: $total-columns;\r\n      @content;\r\n      $grid-columns: $default-grid-columns;\r\n    }\r\n  }\r\n\r\n  @else if length($query) == 2 {\r\n    @media screen and (nth($query, 1): nth($query, 2)) {\r\n      $default-grid-columns: $grid-columns;\r\n      $grid-columns: $total-columns;\r\n      @content;\r\n      $grid-columns: $default-grid-columns;\r\n    }\r\n  }\r\n\r\n  @else if length($query) == 3 {\r\n    @media screen and (nth($query, 1): nth($query, 2)) {\r\n      $default-grid-columns: $grid-columns;\r\n      $grid-columns: nth($query, 3);\r\n      @content;\r\n      $grid-columns: $default-grid-columns;\r\n    }\r\n  }\r\n\r\n  @else if length($query) == 4 {\r\n    @media screen and (nth($query, 1): nth($query, 2)) and (nth($query, 3): nth($query, 4)) {\r\n      $default-grid-columns: $grid-columns;\r\n      $grid-columns: $total-columns;\r\n      @content;\r\n      $grid-columns: $default-grid-columns;\r\n    }\r\n  }\r\n\r\n  @else if length($query) == 5 {\r\n    @media screen and (nth($query, 1): nth($query, 2)) and (nth($query, 3): nth($query, 4)) {\r\n      $default-grid-columns: $grid-columns;\r\n      $grid-columns: nth($query, 5);\r\n      @content;\r\n      $grid-columns: $default-grid-columns;\r\n    }\r\n  }\r\n\r\n  @else {\r\n    @include -neat-warn(\"Wrong number of arguments for breakpoint(). Read the documentation for more details.\");\r\n  }\r\n}\r\n\r\n@mixin nth-omega($nth, $display: block, $direction: default) {\r\n  @include -neat-warn(\"The nth-omega() mixin is deprecated. Please use omega() instead.\");\r\n  @include omega($nth $display, $direction);\r\n}\r\n\r\n/// Resets the active display property to `block`. Particularly useful when changing the display property in a single row.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include row(table);\r\n///     // Context changed to table display\r\n///   }\r\n///\r\n///   @include reset-display;\r\n///   // Context is reset to block display\r\n\r\n@mixin reset-display {\r\n  $container-display-table: false !global;\r\n  @include -neat-warn(\"Resetting $display will be deprecated in future versions in favor of the display(){...} mixin.\");\r\n}\r\n\r\n/// Resets the active layout direction to the default value set in `$default-layout-direction`. Particularly useful when changing the layout direction in a single row.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include row($direction: RTL);\r\n///     // Context changed to right-to-left\r\n///   }\r\n///\r\n///   @include reset-layout-direction;\r\n///   // Context is reset to left-to-right\r\n\r\n@mixin reset-layout-direction {\r\n  $layout-direction: $default-layout-direction !global;\r\n  @include -neat-warn(\"Resetting $direction will be deprecated in future versions in favor of the direction(){...} mixin.\");\r\n}\r\n\r\n/// Resets both the active layout direction and the active display property.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include row(table, RTL);\r\n///     // Context changed to table table and right-to-left\r\n///   }\r\n///\r\n///   @include reset-all;\r\n///   // Context is reset to block display and left-to-right\r\n\r\n@mixin reset-all {\r\n  @include reset-display;\r\n  @include reset-layout-direction;\r\n}\r\n","@mixin grid-column-gradient($values...) {\r\n  background-image: -webkit-linear-gradient(left, $values);\r\n  background-image: -moz-linear-gradient(left, $values);\r\n  background-image: -ms-linear-gradient(left, $values);\r\n  background-image: -o-linear-gradient(left, $values);\r\n  background-image: unquote(\"linear-gradient(to left, #{$values})\");\r\n}\r\n\r\n@if $visual-grid == true or $visual-grid == yes {\r\n  body:before {\r\n    content: '';\r\n    display: inline-block;\r\n    @include grid-column-gradient(gradient-stops($grid-columns));\r\n    height: 100%;\r\n    left: 0;\r\n    margin: 0 auto;\r\n    max-width: $max-width;\r\n    opacity: $visual-grid-opacity;\r\n    position: fixed;\r\n    right: 0;\r\n    width: 100%;\r\n    pointer-events: none;\r\n\r\n    @if $visual-grid-index == back {\r\n      z-index: -1;\r\n    }\r\n\r\n    @else if $visual-grid-index == front {\r\n      z-index: 9999;\r\n    }\r\n\r\n    @each $breakpoint in $visual-grid-breakpoints {\r\n      @if $breakpoint {\r\n        @include media($breakpoint) {\r\n          @include grid-column-gradient(gradient-stops($grid-columns));\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/// Changes the display property used by other mixins called in the code block argument.\r\n///\r\n/// @param {String} $display (block)\r\n///   Display value to be used within the block. Can be `table` or `block`.\r\n///\r\n/// @example scss\r\n///   @include display(table) {\r\n///    .display-table {\r\n///      @include span-columns(6);\r\n///     }\r\n///   }\r\n///\r\n/// @example css\r\n///   .display-table {\r\n///      display: table-cell;\r\n///      ...\r\n///   }\r\n\r\n@mixin display-context($display: block) {\r\n  $scope-display: $container-display-table;\r\n  $container-display-table: $display == table !global;\r\n\r\n  @content;\r\n\r\n  $container-display-table: $scope-display !global;\r\n}\r\n","/// Changes the direction property used by other mixins called in the code block argument.\r\n///\r\n/// @param {String} $direction (left-to-right)\r\n///   Layout direction to be used within the block. Can be `left-to-right` or `right-to-left`.\r\n///\r\n/// @example scss - Usage\r\n///   @include direction(right-to-left) {\r\n///    .right-to-left-block {\r\n///      @include span-columns(6);\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .right-to-left-block {\r\n///     float: right;\r\n///      ...\r\n///   }\r\n\r\n@mixin direction-context($direction: left-to-right) {\r\n  $scope-direction: $layout-direction;\r\n\r\n  @if to-lower-case($direction) == \"left-to-right\" {\r\n    $layout-direction: LTR !global;\r\n  } @else if to-lower-case($direction) == \"right-to-left\" {\r\n    $layout-direction: RTL !global;\r\n  }\r\n\r\n  @content;\r\n\r\n  $layout-direction: $scope-direction !global;\r\n}\r\n","$dark-blue-clr: #2E3A54;\r\n$green-clr: #75C062;\r\n$pink-clr: #E55A84;\r\n$red-clr: #E06488;\r\n$blue-clr: #009DE2;\r\n$light-blue-clr: #F5F6F8;\r\n$orangered-clr: #FF5D5D;\r\n\r\n$text-clr: #3D4043;\r\n$text-2-clr: #828B9A;\r\n$text-3-clr: #AEB4BE;\r\n$border-clr: #D9DDE3;\r\n$navigation-bg-clr: $dark-blue-clr;\r\n$background-clr: $light-blue-clr;\r\n\r\n$color-collection: (#8A75AE, #80A1DA, #B3DD8B, #7EE4E4, #FCD285, #F7967F, #E8669D, #F7B6E7, #B9A4E5, #88D0CB);\r\n\r\n$mobile-size:em(320);\r\n$tablet-size:720px;\r\n$desktop-size:em(960);\r\n$largedesktop-size:em(1050);\r\n\r\n// Bourbon Neat Breakpoints\r\n$mobile: new-breakpoint(min-width $mobile-size 4);\r\n$tablet: new-breakpoint(max-width $tablet-size 8);\r\n$desktop: new-breakpoint(min-width $desktop-size 12);\r\n$largedesktop: new-breakpoint(min-width $largedesktop-size 16);\r\n","@mixin form-input {\r\n    border-radius: 2px;\r\n    border: 1px solid $border-clr;\r\n    font-size:em(16px);\r\n    @include appearance(none);\r\n    &:focus {\r\n        border-color: $blue-clr;\r\n        outline:none;\r\n        background: white;\r\n    }\r\n    &.extend {\r\n        width:100%;\r\n    }\r\n    @include placeholder {\r\n        color: rgba($text-3-clr,0.7);\r\n    }\r\n}\r\n","/*! normalize.css v3.0.2 | MIT License | git.io/normalize */\r\n\r\n/**\r\n * 1. Set default font family to sans-serif.\r\n * 2. Prevent iOS text size adjust after orientation change, without disabling\r\n *    user zoom.\r\n */\r\n\r\nhtml {\r\n  font-family: sans-serif; /* 1 */\r\n  -ms-text-size-adjust: 100%; /* 2 */\r\n  -webkit-text-size-adjust: 100%; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove default margin.\r\n */\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n/* HTML5 display definitions\r\n   ========================================================================== */\r\n\r\n/**\r\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\r\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\r\n * and Firefox.\r\n * Correct `block` display not defined for `main` in IE 11.\r\n */\r\n\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmain,\r\nmenu,\r\nnav,\r\nsection,\r\nsummary {\r\n  display: block;\r\n}\r\n\r\n/**\r\n * 1. Correct `inline-block` display not defined in IE 8/9.\r\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\r\n */\r\n\r\naudio,\r\ncanvas,\r\nprogress,\r\nvideo {\r\n  display: inline-block; /* 1 */\r\n  vertical-align: baseline; /* 2 */\r\n}\r\n\r\n/**\r\n * Prevent modern browsers from displaying `audio` without controls.\r\n * Remove excess height in iOS 5 devices.\r\n */\r\n\r\naudio:not([controls]) {\r\n  display: none;\r\n  height: 0;\r\n}\r\n\r\n/**\r\n * Address `[hidden]` styling not present in IE 8/9/10.\r\n * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.\r\n */\r\n\r\n[hidden],\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\n/* Links\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove the gray background color from active links in IE 10.\r\n */\r\n\r\na {\r\n  background-color: transparent;\r\n}\r\n\r\n/**\r\n * Improve readability when focused and also mouse hovered in all browsers.\r\n */\r\n\r\na:active,\r\na:hover {\r\n  outline: 0;\r\n}\r\n\r\n/* Text-level semantics\r\n   ========================================================================== */\r\n\r\n/**\r\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\r\n */\r\n\r\nabbr[title] {\r\n  border-bottom: 1px dotted;\r\n}\r\n\r\n/**\r\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nb,\r\nstrong {\r\n  font-weight: bold;\r\n}\r\n\r\n/**\r\n * Address styling not present in Safari and Chrome.\r\n */\r\n\r\ndfn {\r\n  font-style: italic;\r\n}\r\n\r\n/**\r\n * Address variable `h1` font-size and margin within `section` and `article`\r\n * contexts in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nh1 {\r\n  font-size: 2em;\r\n  margin: 0.67em 0;\r\n}\r\n\r\n/**\r\n * Address styling not present in IE 8/9.\r\n */\r\n\r\nmark {\r\n  background: #ff0;\r\n  color: #000;\r\n}\r\n\r\n/**\r\n * Address inconsistent and variable font size in all browsers.\r\n */\r\n\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n\r\n/**\r\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\r\n */\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\n/* Embedded content\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove border when inside `a` element in IE 8/9/10.\r\n */\r\n\r\nimg {\r\n  border: 0;\r\n}\r\n\r\n/**\r\n * Correct overflow not hidden in IE 9/10/11.\r\n */\r\n\r\nsvg:not(:root) {\r\n  overflow: hidden;\r\n}\r\n\r\n/* Grouping content\r\n   ========================================================================== */\r\n\r\n/**\r\n * Address margin not present in IE 8/9 and Safari.\r\n */\r\n\r\nfigure {\r\n  margin: 1em 40px;\r\n}\r\n\r\n/**\r\n * Address differences between Firefox and other browsers.\r\n */\r\n\r\nhr {\r\n  -moz-box-sizing: content-box;\r\n  box-sizing: content-box;\r\n  height: 0;\r\n}\r\n\r\n/**\r\n * Contain overflow in all browsers.\r\n */\r\n\r\npre {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n * Address odd `em`-unit font size rendering in all browsers.\r\n */\r\n\r\ncode,\r\nkbd,\r\npre,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\n/* Forms\r\n   ========================================================================== */\r\n\r\n/**\r\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\r\n * styling of `select`, unless a `border` property is set.\r\n */\r\n\r\n/**\r\n * 1. Correct color not being inherited.\r\n *    Known issue: affects color of disabled elements.\r\n * 2. Correct font properties not being inherited.\r\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  color: inherit; /* 1 */\r\n  font: inherit; /* 2 */\r\n  margin: 0; /* 3 */\r\n}\r\n\r\n/**\r\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\r\n */\r\n\r\nbutton {\r\n  overflow: visible;\r\n}\r\n\r\n/**\r\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\r\n * All other form control elements do not inherit `text-transform` values.\r\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\r\n * Correct `select` style inheritance in Firefox.\r\n */\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none;\r\n}\r\n\r\n/**\r\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\r\n *    and `video` controls.\r\n * 2. Correct inability to style clickable `input` types in iOS.\r\n * 3. Improve usability and consistency of cursor style between image-type\r\n *    `input` and others.\r\n */\r\n\r\nbutton,\r\nhtml input[type=\"button\"], /* 1 */\r\ninput[type=\"reset\"],\r\ninput[type=\"submit\"] {\r\n  -webkit-appearance: button; /* 2 */\r\n  cursor: pointer; /* 3 */\r\n}\r\n\r\n/**\r\n * Re-set default cursor for disabled elements.\r\n */\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n  cursor: default;\r\n}\r\n\r\n/**\r\n * Remove inner padding and border in Firefox 4+.\r\n */\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n  border: 0;\r\n  padding: 0;\r\n}\r\n\r\n/**\r\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\r\n * the UA stylesheet.\r\n */\r\n\r\ninput {\r\n  line-height: normal;\r\n}\r\n\r\n/**\r\n * It's recommended that you don't attempt to style these elements.\r\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\r\n *\r\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\r\n * 2. Remove excess padding in IE 8/9/10.\r\n */\r\n\r\ninput[type=\"checkbox\"],\r\ninput[type=\"radio\"] {\r\n  box-sizing: border-box; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\r\n * `font-size` values of the `input`, it causes the cursor style of the\r\n * decrement button to change from `default` to `text`.\r\n */\r\n\r\ninput[type=\"number\"]::-webkit-inner-spin-button,\r\ninput[type=\"number\"]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n/**\r\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\r\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome\r\n *    (include `-moz` to future-proof).\r\n */\r\n\r\ninput[type=\"search\"] {\r\n  -webkit-appearance: textfield; /* 1 */\r\n  -moz-box-sizing: content-box;\r\n  -webkit-box-sizing: content-box; /* 2 */\r\n  box-sizing: content-box;\r\n}\r\n\r\n/**\r\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\r\n * Safari (but not Chrome) clips the cancel button when the search input has\r\n * padding (and `textfield` appearance).\r\n */\r\n\r\ninput[type=\"search\"]::-webkit-search-cancel-button,\r\ninput[type=\"search\"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n/**\r\n * Define consistent border, margin, and padding.\r\n */\r\n\r\nfieldset {\r\n  border: 1px solid #c0c0c0;\r\n  margin: 0 2px;\r\n  padding: 0.35em 0.625em 0.75em;\r\n}\r\n\r\n/**\r\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\r\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\r\n */\r\n\r\nlegend {\r\n  border: 0; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove default vertical scrollbar in IE 8/9/10/11.\r\n */\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n * Don't inherit the `font-weight` (applied by a rule above).\r\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\r\n */\r\n\r\noptgroup {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Tables\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove most spacing between table cells.\r\n */\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\ntd,\r\nth {\r\n  padding: 0;\r\n}\r\n"],"mappings":"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","names":[]}